// Code generated by genlambdamux; DO NOT EDIT.
package logtypesapi

import (
	"context"
	"github.com/panther-labs/panther/pkg/lambdamux/lambdaclient"
)

type ListAvailableLogTypesOutput = AvailableLogTypes

type LambdaAPIEvent struct {
	ListAvailableLogTypes *struct{}
}

type LambdaClient struct {
	client lambdaclient.Client
}

func NewLambdaClient(client lambdaclient.Client) *LambdaClient {
	if client.Validate == nil {
		client.Validate = func(interface{}) error { return nil }
	}
	return &LambdaClient{
		client: client,
	}
}

func (c *LambdaClient) ListAvailableLogTypes(ctx context.Context) (*ListAvailableLogTypesOutput, error) {
	lambdaEvent := LambdaAPIEvent{
		ListAvailableLogTypes: &struct{}{},
	}
	output := ListAvailableLogTypesOutput{}
	if err := c.client.InvokeWithContext(ctx, &lambdaEvent, &output); err != nil {
		return nil, err
	}
	return &output, nil
}
