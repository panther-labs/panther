# Panther is a Cloud-Native SIEM for the Modern Security Team.
# Copyright (C) 2020 Panther Labs Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# NOTE: template auto-generated by 'mage build:cfn', DO NOT EDIT
AWSTemplateFormatVersion: '2010-09-09'
Description: Panther's CloudWatch monitoring dashboards
Resources:
  AlertProcessing:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardBody:
        Fn::Sub: |2

          {
              "start": "-PT1H",
              "widgets": [
                  {
                      "type": "log",
                      "x": 15,
                      "y": 24,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alerts-api' | filter component like 'alerts' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 0,
                      "width": 18,
                      "height": 2,
                      "properties": {
                          "markdown": "\n## Alert Processing\nPlease refer to Panther [documentation](https://docs.runpanther.io/) for detailed system architecture information.\n\nAll graphs have data aggregated into 5 minute bins. Please refer to our operational [Run Books](https://docs.runpanther.io/operations) for tips on troubleshooting issues.\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 11,
                      "width": 18,
                      "height": 1,
                      "properties": {
                          "markdown": "\n### Lambdas\n"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 15,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-alert-processor", "Resource", "panther-alert-processor", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 18,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-alert-forwarder", "Resource", "panther-alert-forwarder", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 15,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-alert-processor", "Resource", "panther-alert-processor", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-alert-processor", "Resource", "panther-alert-processor", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-alert-processor", "Resource", "panther-alert-processor", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 18,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-alert-forwarder", "Resource", "panther-alert-forwarder", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-alert-forwarder", "Resource", "panther-alert-forwarder", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-alert-forwarder", "Resource", "panther-alert-forwarder", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 15,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-alert-processor", "Resource", "panther-alert-processor", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-alert-processor", "Resource", "panther-alert-processor", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors  / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 18,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-alert-forwarder", "Resource", "panther-alert-forwarder", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-alert-forwarder", "Resource", "panther-alert-forwarder", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 2,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alert-forwarder' | SOURCE '/aws/lambda/panther-alert-processor' | SOURCE '/aws/lambda/panther-alert-delivery' | filter level='error' or level='warn'\n| fields @timestamp, @message\n| sort @timestamp desc | limit 20",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Most Recent 20 Errors and Warnings",
                          "view": "table"
                      }
                  },
                  {
                      "type": "log",
                      "x": 9,
                      "y": 2,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alert-forwarder' | SOURCE '/aws/lambda/panther-alert-processor' | SOURCE '/aws/lambda/panther-alert-delivery' | filter  level='error'  or level='warn'\n| stats sum(strcontains(level, 'error')) as errors, sum(strcontains(level, 'warn')) as warns by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Errors and Warnings",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 15,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alert-processor' | filter component like 'alert_processor' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 15,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alert-processor' | filter component like 'alert_processor' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 8,
                      "width": 18,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/SQS", "ApproximateNumberOfMessagesVisible", "QueueName", "panther-alert-processor-dlq", { "yAxis": "right" } ],
                              [ ".", "NumberOfMessagesReceived", ".", "panther-alert-processor-queue" ],
                              [ ".", "NumberOfMessagesSent", ".", "." ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "stat": "Sum",
                          "period": 300,
                          "title": "Alert Processor  Input SQS Queue Performance"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 24,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Log Alert API\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 15,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Alert Processor\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 18,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Alert Forwarder\n"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 21,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-log-alert-forwarder", "Resource", "panther-log-alert-forwarder", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 21,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-log-alert-forwarder", "Resource", "panther-log-alert-forwarder", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-log-alert-forwarder", "Resource", "panther-log-alert-forwarder", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-log-alert-forwarder", "Resource", "panther-log-alert-forwarder", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 21,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-log-alert-forwarder", "Resource", "panther-log-alert-forwarder", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-log-alert-forwarder", "Resource", "panther-log-alert-forwarder", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Erros / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 18,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alert-forwarder' | filter component like 'alert_forwarder' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 18,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alert-forwarder' | filter component like 'alert_forwarder' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 24,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-alerts-api", "Resource", "panther-alerts-api", { "stat": "Sum" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 24,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-alerts-api", "Resource", "panther-alerts-api", { "stat": "Minimum" } ],
                              [ "...", { "stat": "Average" } ],
                              [ "...", { "stat": "Maximum" } ]
                          ],
                          "region": "${AWS::Region}"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 24,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-alerts-api", "Resource", "panther-alerts-api", { "id": "errors", "stat": "Sum", "color": "#d13212" } ],
                              [ ".", "Invocations", ".", ".", ".", ".", { "id": "invocations", "stat": "Sum", "visible": false } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          }
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 21,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Log Alert Forwarder\n"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 21,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-alert-forwarder' | filter operation like 'panther-log-alert-forwarder' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 21,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-alert-forwarder' | filter operation like 'panther-log-alert-forwarder' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 24,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alerts-api' | filter component like 'alerts'| stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 12,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Alert Delivery\n"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 12,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-alert-delivery", "Resource", "panther-alert-delivery", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 12,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-alert-delivery", "Resource", "panther-alert-delivery", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-alert-delivery", "Resource", "panther-alert-delivery", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-alert-delivery", "Resource", "panther-alert-delivery", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 12,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-alert-delivery", "Resource", "panther-alert-delivery", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-alert-delivery", "Resource", "panther-alert-delivery", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 12,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alert-delivery' | filter component like 'alert_delivery' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 12,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alert-delivery' | filter component like 'alert_delivery' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  }
              ]
          }
      DashboardName:
        Fn::Sub: PantherAlertProcessing-${AWS::Region}
  CloudSecurity:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardBody:
        Fn::Sub: |2

          {
              "start": "-PT1H",
              "widgets": [
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 9,
                      "width": 18,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/SQS", "NumberOfMessagesReceived", "QueueName", "panther-snapshot-queue" ],
                              [ ".", "NumberOfMessagesSent", ".", "." ],
                              [ ".", "ApproximateNumberOfMessagesVisible", ".", "panther-snapshot-queue-dlq", { "yAxis": "right" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "stat": "Sum",
                          "period": 300,
                          "title": "Snapshot Poller Input SQS Queue Performance"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 0,
                      "width": 18,
                      "height": 3,
                      "properties": {
                          "markdown": "\n# Infrastructure Monitoring\nPlease refer to Panther [documentation](https://docs.runpanther.io/) for detailed system architecture information.\n\nAll graphs have data aggregated into 5 minute bins. Please refer to our operational [Run Books](https://docs.runpanther.io/operations) for tips on troubleshooting issues.\n"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 31,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-source-api", "Resource", "panther-source-api", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 31,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-source-api", "Resource", "panther-source-api", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-source-api", "Resource", "panther-source-api", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-source-api", "Resource", "panther-source-api", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 31,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-source-api", "Resource", "panther-source-api", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-source-api", "Resource", "panther-source-api", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 34,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-snapshot-scheduler", "Resource", "panther-snapshot-scheduler", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 34,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-snapshot-scheduler", "Resource", "panther-snapshot-scheduler", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-snapshot-scheduler", "Resource", "panther-snapshot-scheduler", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-snapshot-scheduler", "Resource", "panther-snapshot-scheduler", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 34,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-snapshot-scheduler", "Resource", "panther-snapshot-scheduler", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-snapshot-scheduler", "Resource", "panther-snapshot-scheduler", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 37,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-snapshot-pollers", "Resource", "panther-snapshot-pollers", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 37,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-snapshot-pollers", "Resource", "panther-snapshot-pollers", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-snapshot-pollers", "Resource", "panther-snapshot-pollers", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-snapshot-pollers", "Resource", "panther-snapshot-pollers", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 37,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-snapshot-pollers", "Resource", "panther-snapshot-pollers", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-snapshot-pollers", "Resource", "panther-snapshot-pollers", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 40,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-aws-event-processor", "Resource", "panther-aws-event-processor", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 40,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-aws-event-processor", "Resource", "panther-aws-event-processor", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-aws-event-processor", "Resource", "panther-aws-event-processor", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-aws-event-processor", "Resource", "panther-aws-event-processor", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 40,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-aws-event-processor", "Resource", "panther-aws-event-processor", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-aws-event-processor", "Resource", "panther-aws-event-processor", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 31,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-source-api' | filter component like 'snapshot' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 31,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-source-api' | filter component like 'snapshot' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 34,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-snapshot-scheduler' | filter component like 'snapshot' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 34,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-snapshot-scheduler' | filter component like 'snapshot' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 37,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-snapshot-pollers' | filter component like 'snapshot' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 37,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-snapshot-pollers' | filter component like 'snapshot' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 24,
                      "width": 18,
                      "height": 1,
                      "properties": {
                          "markdown": "\n### Lambdas\n"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 49,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-policy-engine", "Resource", "panther-policy-engine", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 49,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-policy-engine", "Resource", "panther-policy-engine", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-policy-engine", "Resource", "panther-policy-engine", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-policy-engine", "Resource", "panther-policy-engine", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 49,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-policy-engine", "Resource", "panther-policy-engine", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-policy-engine", "Resource", "panther-policy-engine", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 49,
                      "width": 6,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-policy-engine' | filter @message like 'REPORT' | stats max(@maxMemoryUsed/@memorySize) * 100.0 as usage by bin(5min)",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 18,
                      "width": 18,
                      "height": 6,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-aws-event-processor' | filter  @message like 'unknown event name'\n| fields @timestamp, eventName, msg, @message\n| sort @timestamp desc | limit 20  ",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Unknown Events",
                          "view": "table"
                      }
                  },
                  {
                      "type": "log",
                      "x": 9,
                      "y": 3,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-aws-event-processor' | SOURCE '/aws/lambda/panther-source-api' | SOURCE '/aws/lambda/panther-snapshot-pollers' | SOURCE '/aws/lambda/panther-snapshot-scheduler' | SOURCE '/aws/lambda/panther-resources-api' | SOURCE '/aws/lambda/panther-resource-processor' | SOURCE '/aws/lambda/panther-policy-engine' | SOURCE '/aws/lambda/panther-compliance-api' | SOURCE '/aws/lambda/panther-analysis-api' | filter  @message like '[ERROR]' or  @message like '[WARN]' or level='error'  or level='warn'\n| stats sum(strcontains(level, 'error')+strcontains(@message, '[ERROR]')) as errors, sum(strcontains(level, 'warn')+strcontains(@message, '[WARN]')) as warns by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Errors and Warnings",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 46,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-resource-processor", "Resource", "panther-resource-processor", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Resource Processor Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 46,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-resource-processor", "Resource", "panther-resource-processor", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-resource-processor", "Resource", "panther-resource-processor", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-resource-processor", "Resource", "panther-resource-processor", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 46,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-resource-processor", "Resource", "panther-resource-processor", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-resource-processor", "Resource", "panther-resource-processor", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 40,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-aws-event-processor' | filter component like 'aws_event_processor' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 40,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-aws-event-processor' | filter component like 'aws_event_processor' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 43,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-resources-api", "Resource", "panther-resources-api", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 43,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-resources-api", "Resource", "panther-resources-api", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-resources-api", "Resource", "panther-resources-api", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-resources-api", "Resource", "panther-resources-api", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 43,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-resources-api", "Resource", "panther-resources-api", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-resources-api", "Resource", "panther-resources-api", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 43,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-resources-api' | filter component like 'panther-resources-api' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 43,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-resources-api' | filter component like 'panther-resources-api' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 12,
                      "width": 18,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/SQS", "NumberOfMessagesSent", "QueueName", "panther-aws-events-queue" ],
                              [ ".", "NumberOfMessagesReceived", ".", "." ],
                              [ ".", "ApproximateNumberOfMessagesVisible", ".", "panther-aws-events-queue-dlq", { "yAxis": "right" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "stat": "Sum",
                          "period": 300,
                          "title": "AWS Event Processor Input SQS Queue Performance"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 15,
                      "width": 18,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/SQS", "NumberOfMessagesReceived", "QueueName", "panther-resources-queue" ],
                              [ ".", "ApproximateNumberOfMessagesVisible", ".", "panther-resources-queue-dlq", { "yAxis": "right" } ],
                              [ ".", "NumberOfMessagesSent", ".", "panther-resources-queue" ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "stat": "Sum",
                          "period": 300,
                          "title": "Rource Processor Input SQS Queue Performance"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 46,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-resource-processor' | filter component like 'resource_processor' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 46,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-resource-processor' | filter component like 'resource_processor' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 49,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Policy Engine\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 31,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Snapshot API\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 34,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Snapshot Scheduler\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 37,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Snapshot Poller\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 40,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Event Processor\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 43,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Resources API\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 46,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Resource Processor\n"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 28,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-compliance-api", "Resource", "panther-compliance-api", { "stat": "Sum" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 28,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-compliance-api", "Resource", "panther-compliance-api", { "stat": "Minimum" } ],
                              [ "...", { "stat": "Average" } ],
                              [ "...", { "stat": "Maximum" } ]
                          ],
                          "region": "${AWS::Region}"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 28,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-compliance-api", "Resource", "panther-compliance-api", { "id": "errors", "stat": "Sum", "color": "#d13212" } ],
                              [ ".", "Invocations", ".", ".", ".", ".", { "id": "invocations", "stat": "Sum", "visible": false } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          }
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 28,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Compliance API\n"
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 28,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-compliance-api' | filter component like 'compliance' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 28,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-compliance-api' | filter component like 'compliance' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 25,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Analysis API\n"
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 25,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-analysis-api' | filter component like 'analysis' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 25,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-analysis-api' | filter component like 'analysis' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 25,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-analysis-api", "Resource", "panther-analysis-api", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 25,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-analysis-api", "Resource", "panther-analysis-api", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-analysis-api", "Resource", "panther-analysis-api", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-analysis-api", "Resource", "panther-analysis-api", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 25,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-analysis-api", "Resource", "panther-analysis-api", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-analysis-api", "Resource", "panther-analysis-api", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors and Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 3,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-source-api' | SOURCE '/aws/lambda/panther-snapshot-pollers' | SOURCE '/aws/lambda/panther-snapshot-scheduler' | SOURCE '/aws/lambda/panther-aws-event-processor' | SOURCE '/aws/lambda/panther-resources-api' | SOURCE '/aws/lambda/panther-resource-processor' | SOURCE '/aws/lambda/panther-policy-engine' | SOURCE '/aws/lambda/panther-compliance-api' | SOURCE '/aws/lambda/panther-analysis-api' | filter  @message like '[ERROR]' or  @message like '[WARN]' or level='error' or level='warn'\n| fields @timestamp, @message\n| sort @timestamp desc | limit 20  ",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Most Recent 20 Errors and Warnings",
                          "view": "table"
                      }
                  }
              ]
          }
      DashboardName:
        Fn::Sub: PantherCloudSecurity-${AWS::Region}
  LogAnalysis:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardBody:
        Fn::Sub: |2

          {
              "start": "-PT1H",
              "widgets": [
                  {
                      "type": "log",
                      "x": 0,
                      "y": 3,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | SOURCE '/aws/lambda/panther-rules-engine' | SOURCE '/aws/lambda/panther-datacatalog-updater' | filter @message like '[ERROR]' or  @message like '[WARN]' or level='error' or level='warn' or @message like 'fatal error:'\n| fields @timestamp, @message\n| sort @timestamp desc\n| limit 20",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Most Recent 20 Errors and Warnings",
                          "view": "table"
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 26,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter ispresent(stats.LogType) | stats sum(stats.BytesProcessedCount)/(1000000) as mbbytes by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Input MBytes (Uncompressed) Processed",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 32,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter ispresent(stats.LogType) | stats sum(stats.EventCount) as events by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Output Events Written to S3",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 29,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter operation='readS3Object' | stats percentile(opTime, 50)*1000.0 as p50, percentile(opTime, 90)*1000.0 as p90, percentile(opTime, 95)*1000.0 as p95, percentile(opTime, 100)*1000.0 as p100 by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Input File Read Time Percentiles (msec)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 20,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter ispresent(stats.LogType)  | stats count(stats.LogType) as files by stats.LogType as logtype | sort files desc",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Input File Count by Log Type",
                          "view": "table"
                      }
                  },
                  {
                      "type": "log",
                      "x": 9,
                      "y": 26,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter operation='readS3Object' | stats count(*) as files by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Input Files Processed",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 23,
                      "width": 18,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/SQS", "ApproximateNumberOfMessagesVisible", "QueueName", "panther-input-data-notifications-queue-dlq", { "yAxis": "right" } ],
                              [ ".", "NumberOfMessagesReceived", ".", "panther-input-data-notifications-queue" ],
                              [ ".", "NumberOfMessagesSent", ".", "." ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "stat": "Sum",
                          "period": 300,
                          "title": "Input SQS Queue Performance",
                          "legend": {
                              "position": "bottom"
                          }
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 35,
                      "width": 18,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/SNS", "NumberOfMessagesPublished", "TopicName", "panther-processed-data-notifications" ],
                              [ ".", "NumberOfNotificationsFailed", ".", "." ],
                              [ ".", "NumberOfNotificationsDelivered", ".", "." ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "stat": "Sum",
                          "period": 300,
                          "title": "Output File Notification SNS Performance",
                          "legend": {
                              "position": "bottom"
                          }
                      }
                  },
                  {
                      "type": "log",
                      "x": 9,
                      "y": 29,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter operation='parse' | filter ispresent(stats.LogType)  | stats percentile(opTime, 50)*1000.0 as p50, percentile(opTime, 90)*1000.0 as p90, percentile(opTime, 95)*1000.0 as p95, percentile(opTime, 100)*1000.0 as p100 by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Processing Time Percentiles (msec)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 0,
                      "width": 18,
                      "height": 3,
                      "properties": {
                          "markdown": "\n# [Log Processing](https://docs.runpanther.io/log-analysis/log-processing) \nThe log processing Input SQS Queue receives S3 event notifications from buckets users configure for log processing. A Lambda function processes each file into JSON and appends the [Panther Fields](https://docs.runpanther.io/historical-search/panther-fields). The new JSON files are written to S3 and notifications are sent to the Output File Notification SNS topic to trigger the [Rules Engine](https://docs.runpanther.io/log-analysis/rules).\n\nThe Rules Engine reads file names in S3 notifications sent to the Input SQS Queue from the output of the [log processing](https://docs.runpanther.io/log-analysis/log-processing) subsystem. The engine applies the configured rules to each file. Those events that match are written to S3 for historical search and alarms generated per the set deduplication string and alarm interval for each rule.The alarms are sent to the Alert Output SQS Queue for delivery to user configured [destinations](https://docs.runpanther.io/destinations/background).\n\nAll graphs have data aggregated into 5 minute bins. Please refer to our operational [Run Books](https://docs.runpanther.io/operations) for tips on troubleshooting issues.\n"
                      }
                  },
                  {
                      "type": "log",
                      "x": 9,
                      "y": 32,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter operation='sendData' | stats sum(contentLength) / 1000000 as mbbytes by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Output MBytes (Compressed) Written to S3",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 9,
                      "y": 20,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter ispresent(stats.LogType)  | stats sum(stats.BytesProcessedCount) / 1000000 as mbbytes by stats.LogType as logtype | sort mbbytes desc",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Input MBytes (Uncompressed) by Log Type",
                          "view": "table"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 39,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-log-processor", "Resource", "panther-log-processor", { "stat": "Sum" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "start": "-PT3H",
                          "end": "P0D",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 39,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-log-processor", "Resource", "panther-log-processor", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-log-processor", "Resource", "panther-log-processor", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-log-processor", "Resource", "panther-log-processor", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 39,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-log-processor", "Resource", "panther-log-processor", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-log-processor", "Resource", "panther-log-processor", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 45,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-datacatalog-updater' | filter operation like 'panther-datacatalog-updater' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 42,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-rules-engine", "Resource", "panther-rules-engine", { "stat": "Sum" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false,
                          "start": "-P1D",
                          "end": "P0D"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 42,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-rules-engine", "Resource", "panther-rules-engine", { "stat": "Minimum" } ],
                              [ "...", { "stat": "Average" } ],
                              [ "...", { "stat": "Maximum" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)",
                          "start": "-P1D",
                          "end": "P0D"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 42,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-rules-engine", "Resource", "panther-rules-engine", { "id": "errors", "stat": "Sum", "color": "#d13212" } ],
                              [ ".", "Invocations", ".", ".", ".", ".", { "id": "invocations", "stat": "Sum", "visible": false } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": " Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false,
                          "start": "-P1D",
                          "end": "P0D"
                      }
                  },
                  {
                      "type": "log",
                      "x": 9,
                      "y": 3,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-rules-engine' | SOURCE '/aws/lambda/panther-log-processor' | SOURCE '/aws/lambda/panther-datacatalog-updater' | filter @message like '[ERROR]' or level='error' or @message like '[WARN]' or level='warn' or @message like 'fatal error:'\n| sum(strcontains(@message, '\"level\":\"error\"')+strcontains(@message, '[ERROR'])+strcontains(@message, 'fatal error:')) as errors, sum(strcontains(@message, '\"level\":\"warn\"')+strcontains(@message, '[WARN]')) as warns by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Errors and Warnings",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 13,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-rules-engine' | filter @message like 'Retrieved' | parse @message \"Retrieved * rules in * seconds\" as nrules, ruleloadtime | stats max(nrules) as rules by bin(5m)\n",
                          "region": "${AWS::Region}",
                          "title": "Number of Loaded Rules",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 9,
                      "y": 13,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-rules-engine' | filter @message like 'Retrieved' | parse @message \"Retrieved * rules in * seconds\" as nrules, ruleloadtime | stats percentile(ruleloadtime, 50)*1000.0 as p50, percentile(ruleloadtime, 90)*1000.0  as p90, percentile(ruleloadtime, 95)*1000.0  as p95, percentile(ruleloadtime, 100)*1000.0  as p100 by bin(5m)\n",
                          "region": "${AWS::Region}",
                          "title": "Rule Load Time Percentiles (msec)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 16,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-rules-engine' | filter @message like 'Matched' | parse @message \"Matched * events in * seconds\" as nevents, rulematchtime | stats percentile(rulematchtime, 50)*1000.0 as p50, percentile(rulematchtime, 90)*1000.0  as p90, percentile(rulematchtime, 95)*1000.0  as p95, percentile(rulematchtime, 100)*1000.0  as p100 by bin(5m)\n",
                          "region": "${AWS::Region}",
                          "title": "Match Time per File  Percentiles (msec)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 9,
                      "y": 16,
                      "width": 9,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-rules-engine' | filter @message like 'Matched' | parse @message \"Matched * events in * seconds\" as nevents, rulematchtime | stats sum(nevents) as matches by bin(5m)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Number of Rule Matches",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 42,
                      "width": 6,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-rules-engine' | filter @message like 'REPORT' | stats max(@maxMemoryUsed/@memorySize) * 100.0 as usage by bin(5min)",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 45,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Data Catalog Updater\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 19,
                      "width": 18,
                      "height": 1,
                      "properties": {
                          "markdown": "\n## Processing\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 39,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Log Processor\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 38,
                      "width": 18,
                      "height": 1,
                      "properties": {
                          "markdown": "\n## Lambdas\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 9,
                      "width": 18,
                      "height": 1,
                      "properties": {
                          "markdown": "\n## Rules\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 42,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Rules Engine\n"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 45,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-datacatalog-updater", "Resource", "panther-datacatalog-updater", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 45,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-datacatalog-updater", "Resource", "panther-datacatalog-updater", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-datacatalog-updater", "Resource", "panther-datacatalog-updater", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-datacatalog-updater", "Resource", "panther-datacatalog-updater", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 45,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-datacatalog-updater", "Resource", "panther-datacatalog-updater", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-datacatalog-updater", "Resource", "panther-datacatalog-updater", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Error count and success rate (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 39,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter operation like 'panther-log-processor' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 39,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter operation like 'panther-log-processor' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 45,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-datacatalog-updater' | filter operation like 'panther-datacatalog-updater' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 10,
                      "width": 18,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/SQS", "NumberOfMessagesSent", "QueueName", "panther-rules-engine-queue" ],
                              [ ".", "NumberOfMessagesReceived", ".", "." ],
                              [ ".", "ApproximateNumberOfMessagesVisible", ".", "panther-rules-engine-queue-dlq", { "yAxis": "right" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "stat": "Sum",
                          "period": 300,
                          "start": "-PT12H",
                          "end": "P0D",
                          "title": "Input SQS Queue Performance"
                      }
                  }
              ]
          }
      DashboardName:
        Fn::Sub: PantherLogAnalysis-${AWS::Region}
  Overview:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardBody:
        Fn::Sub: |2

          {
              "start": "-PT1H",
              "widgets": [
                  {
                      "type": "log",
                      "x": 0,
                      "y": 3,
                      "width": 12,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | SOURCE '/aws/lambda/panther-rules-engine' | filter @message like '[ERROR]' or  @message like '[WARN]' or level='error' or level='warn'\n| fields @timestamp, @message\n| sort @timestamp desc\n| limit 20",
                          "region": "${AWS::Region}",
                          "title": "Log Processing and Rules Engine Most Recent 20 Errors and Warnings",
                          "view": "table"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 3,
                      "width": 12,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-rules-engine' | SOURCE '/aws/lambda/panther-log-processor' | filter @message like '[ERROR]' or level='error' or @message like '[WARN]' or level='warn'\n| fields strcontains(@message, '[ERROR']) as ruleError, strcontains(@message, '[WARN']) as ruleWarn, level \n| stats sum(ruleError) as rule_errors, sum(ruleWarn) as rule_warns, sum(strcontains(level, 'error')) as log_errors, sum(strcontains(level, 'warn')) as log_warns by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Log Processing and Rules Engine  Errors and Warnings",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 6,
                      "width": 6,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter ispresent(stats.LogType)  | stats count(stats.LogType) as files by stats.LogType as logtype | sort files desc",
                          "region": "${AWS::Region}",
                          "title": "Input File Count by Log Type",
                          "view": "table"
                      }
                  },
                  {
                      "type": "log",
                      "x": 6,
                      "y": 6,
                      "width": 6,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter ispresent(stats.LogType)  | stats sum(stats.BytesProcessedCount) / 1000000 as mbbytes by stats.LogType as logtype | sort mbbytes desc",
                          "region": "${AWS::Region}",
                          "title": "Input MBytes (Uncompressed) by Log Type",
                          "view": "table"
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 9,
                      "width": 12,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-log-processor' | filter operation='sendData' | stats sum(contentLength) / 1000000 as mbbytes by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Log Processing Ouptut  MBytes (Compressed) Written to S3",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 6,
                      "width": 12,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-rules-engine' | filter @message like 'Retrieved' | parse @message \"Retrieved * rules in * seconds\" as nrules, ruleloadtime | stats max(nrules) as rules by bin(5m)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Number of Loaded Rules",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 9,
                      "width": 12,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-rules-engine' | filter @message like 'Matched' | parse @message \"Matched * events in * seconds\" as nevents, rulematchtime | stats sum(nevents) as matches by bin(5m)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Number of Rule Matches",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 12,
                      "width": 12,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-source-api' | SOURCE '/aws/lambda/panther-snapshot-pollers' | SOURCE '/aws/lambda/panther-snapshot-scheduler' | SOURCE '/aws/lambda/panther-aws-event-processor' | SOURCE '/aws/lambda/panther-resources-api' | SOURCE '/aws/lambda/panther-resource-processor' | SOURCE '/aws/lambda/panther-policy-engine' | SOURCE '/aws/lambda/panther-analysis-api' | SOURCE '/aws/lambda/panther-compliance-api' | filter  @message like '[ERROR]' or  @message like '[WARN]' or level='error' or level='warn'\n| fields @timestamp, @message\n| sort @timestamp desc | limit 20",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Infrastructure Monitoring Recent 20 Errors and Warnings",
                          "view": "table"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 0,
                      "width": 24,
                      "height": 3,
                      "properties": {
                          "markdown": "\n# Panther System Overview\n\nPlease refer to Panther [documentation](https://docs.runpanther.io/) for detailed system architecture information.\n\nAll graphs have data aggregated into 5 minute bins. Please refer to our operational [Run Books](https://docs.runpanther.io/operations) for tips on troubleshooting issues.\n"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 12,
                      "width": 12,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-aws-event-processor' | SOURCE '/aws/lambda/panther-source-api' | SOURCE '/aws/lambda/panther-snapshot-pollers' | SOURCE '/aws/lambda/panther-snapshot-scheduler' | SOURCE '/aws/lambda/panther-resources-api' | SOURCE '/aws/lambda/panther-resource-processor' | SOURCE '/aws/lambda/panther-policy-engine' | SOURCE '/aws/lambda/panther-analysis-api' | SOURCE '/aws/lambda/panther-compliance-api' | filter  @message like '[ERROR]' or  @message like '[WARN]' or level='error'  or level='warn'\n| stats sum(strcontains(level, 'error')+strcontains(@message, '[ERROR]')) as errors, sum(strcontains(level, 'warn')+strcontains(@message, '[WARN]')) as warns by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Infrastructure Monitoring Errors and Warnings",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 15,
                      "width": 12,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alert-forwarder' | SOURCE '/aws/lambda/panther-alert-processor' | SOURCE '/aws/lambda/panther-alert-delivery' | filter level='error' or level='warn'\n| fields @timestamp, @message\n| sort @timestamp desc | limit 20",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Alert Processing Recent 20 Errors and Warnings",
                          "view": "table"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 15,
                      "width": 12,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-alert-forwarder' | SOURCE '/aws/lambda/panther-alert-processor' | SOURCE '/aws/lambda/panther-alert-delivery' | filter  level='error'  or level='warn'\n| stats sum(strcontains(level, 'error')) as errors, sum(strcontains(level, 'warn')) as warns by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Alert Processing Errors and Warnings",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "log",
                      "x": 0,
                      "y": 18,
                      "width": 12,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-remediation-processor' | SOURCE '/aws/lambda/panther-remediation-api' | SOURCE '/aws/lambda/panther-aws-remediation' | filter @message like '[ERROR]' or  @message like '[WARN]' or level='error' or level='warn'\n| fields @timestamp, @message\n| sort @timestamp desc | limit 20",
                          "region": "${AWS::Region}",
                          "title": "Remediation Recent 20 Errors and Warnings",
                          "view": "table"
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 18,
                      "width": 12,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-remediation-api' | SOURCE '/aws/lambda/panther-remediation-processor' | SOURCE '/aws/lambda/panther-aws-remediation' | filter  @message like '[ERROR]' or  @message like '[WARN]' or level='error'  or level='warn'\n| stats sum(strcontains(level, 'error')+strcontains(@message, '[ERROR]')) as errors, sum(strcontains(level, 'warn')+strcontains(@message, '[WARN]')) as warns by bin(5m)",
                          "region": "${AWS::Region}",
                          "title": "Remediation Errors and Warnings",
                          "view": "table"
                      }
                  }
              ]
          }
      DashboardName:
        Fn::Sub: PantherOverview-${AWS::Region}
  Remediation:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardBody:
        Fn::Sub: |2

          {
              "start": "-PT1H",
              "widgets": [
                  {
                      "type": "log",
                      "x": 0,
                      "y": 3,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-remediation-processor' | SOURCE '/aws/lambda/panther-remediation-api' | SOURCE '/aws/lambda/panther-aws-remediation' | filter @message like '[ERROR]' or  @message like '[WARN]' or level='error' or level='warn'\n| fields @timestamp, @message\n| sort @timestamp desc | limit 20",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Most Recent 20 Errors and Warnings",
                          "view": "table"
                      }
                  },
                  {
                      "type": "log",
                      "x": 9,
                      "y": 3,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-remediation-api' | SOURCE '/aws/lambda/panther-remediation-processor' | SOURCE '/aws/lambda/panther-aws-remediation' | filter  @message like '[ERROR]' or  @message like '[WARN]' or level='error'  or level='warn'\n| stats sum(strcontains(level, 'error')+strcontains(@message, '[ERROR]')) as errors, sum(strcontains(level, 'warn')+strcontains(@message, '[WARN]')) as warns by bin(5m)",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Errors and Warnings",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 0,
                      "width": 18,
                      "height": 3,
                      "properties": {
                          "markdown": "\n## Remediation\nPlease refer to Panther [documentation](https://docs.runpanther.io/) for detailed system architecture information.\n\nAll graphs have data aggregated into 5 minute bins. Please refer to our operational [Run Books](https://docs.runpanther.io/operations) for tips on troubleshooting issues.\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 12,
                      "width": 18,
                      "height": 1,
                      "properties": {
                          "markdown": "\n### Lambdas\n"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 9,
                      "width": 18,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/SQS", "NumberOfMessagesSent", "QueueName", "panther-remediation-queue" ],
                              [ ".", "NumberOfMessagesReceived", ".", "." ],
                              [ ".", "ApproximateNumberOfMessagesVisible", ".", "panther-remediation-dlq", { "yAxis": "right" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "stat": "Sum",
                          "period": 300,
                          "title": "Remediation Processor Input SQS Queue Performance"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 19,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-aws-remediation", "Resource", "panther-aws-remediation", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 19,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-aws-remediation", "Resource", "panther-aws-remediation", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-aws-remediation", "Resource", "panther-aws-remediation", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-aws-remediation", "Resource", "panther-aws-remediation", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 16,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-remediation-api", "Resource", "panther-remediation-api", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 16,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-remediation-api", "Resource", "panther-remediation-api", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-remediation-api", "Resource", "panther-remediation-api", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-remediation-api", "Resource", "panther-remediation-api", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 16,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-remediation-api", "Resource", "panther-remediation-api", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-remediation-api", "Resource", "panther-remediation-api", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 3,
                      "y": 13,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-remediation-processor", "Resource", "panther-remediation-processor", { "stat": "Sum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Invocations",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 13,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-remediation-processor", "Resource", "panther-remediation-processor", { "stat": "Minimum", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-remediation-processor", "Resource", "panther-remediation-processor", { "stat": "Average", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Duration", "FunctionName", "panther-remediation-processor", "Resource", "panther-remediation-processor", { "stat": "Maximum", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Duration (msec)"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 13,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-remediation-processor", "Resource", "panther-remediation-processor", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-remediation-processor", "Resource", "panther-remediation-processor", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 16,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-remediation-api' | filter component like 'remediation-api' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Used (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 13,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-remediation-processor' | filter component like 'remediation_processor' | stats max(percentMemUsed) as used by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Memory Used (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 19,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/Lambda", "Errors", "FunctionName", "panther-aws-remediation", "Resource", "panther-aws-remediation", { "id": "errors", "stat": "Sum", "color": "#d13212", "region": "${AWS::Region}" } ],
                              [ "AWS/Lambda", "Invocations", "FunctionName", "panther-aws-remediation", "Resource", "panther-aws-remediation", { "id": "invocations", "stat": "Sum", "visible": false, "region": "${AWS::Region}" } ],
                              [ { "expression": "100 - 100 * errors / MAX([errors, invocations])", "label": "Success rate (%)", "id": "availability", "yAxis": "right", "region": "${AWS::Region}" } ]
                          ],
                          "region": "${AWS::Region}",
                          "title": "Errors / Success (%)",
                          "yAxis": {
                              "right": {
                                  "max": 100
                              }
                          },
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 12,
                      "y": 19,
                      "width": 6,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-aws-remediation' | filter @message like 'REPORT' | stats max(@maxMemoryUsed/@memorySize) * 100.0 as usage by bin(5min)",
                          "region": "${AWS::Region}",
                          "title": "Remediation Memory Usage (%)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 16,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-remediation-api' | filter component like 'remediation-api' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries",
                          "stacked": false
                      }
                  },
                  {
                      "type": "log",
                      "x": 15,
                      "y": 13,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "query": "SOURCE '/aws/lambda/panther-remediation-processor' | filter component like 'remediation_processor' | stats max(heapSizeMB) as heap by bin(5min)\n",
                          "region": "${AWS::Region}",
                          "stacked": false,
                          "title": "Heap Usage (MB)",
                          "view": "timeSeries"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 19,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Remediation\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 13,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Remediation Processor\n"
                      }
                  },
                  {
                      "type": "text",
                      "x": 0,
                      "y": 16,
                      "width": 3,
                      "height": 3,
                      "properties": {
                          "markdown": "\n### Remediation API\n"
                      }
                  }
              ]
          }
      DashboardName:
        Fn::Sub: PantherRemediation-${AWS::Region}
