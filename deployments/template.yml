# Panther is a scalable, powerful, cloud-native SIEM written in Golang/React.
# Copyright (C) 2020 Panther Labs Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

AWSTemplateFormatVersion: 2010-09-09
Description: Master Panther template for both front-end and back-end resources

Parameters:
  CloudWatchLogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period
    Default: 365
  Debug:
    Type: String
    # TODO: configurable logging levels (debug, info, warn, critical)
    Description: Toggle debug logging for all Lambda functions
    Default: false
    AllowedValues: [true, false]
  LayerVersionArns:
    Type: CommaDelimitedList
    Description: List of LayerVersion ARNs to attach to every function
    Default: ''
  PythonLayerVersionArn:
    Type: String
    Description: Custom Python layer for analysis and remediation
    Default: ''
  TracingMode:
    Type: String
    Description: Enable XRay tracing on Lambda and API Gateway
    AllowedValues: ['', Active, PassThrough]
    Default: ''

  # Set automatically by "mage deploy" unless PythonLayerVersionArn is specified.
  PythonLayerKey:
    Type: String
    Description: S3 key for the Python analysis layer
    Default: ''
  PythonLayerObjectVersion:
    Type: String
    Description: S3 object version for the python layer zipfile
    Default: ''

  # Set automatically by "mage deploy" unless specified in panther_config
  WebApplicationCertificateArn:
    Type: String
    Description: The ARN of the TLS certificate that is going to be used by the web application

Conditions:
  CreatePythonLayer: !Equals [!Ref PythonLayerVersionArn, '']

Resources:
  GatewayLoggingRole:
    Type: AWS::IAM::Role
    Properties:
      Description: API Gateway uses this role to publish logs to CloudWatch
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs

  GatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt GatewayLoggingRole.Arn

  QueueEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Encryption key for all panther SQS queues
      EnableKeyRotation: true
      KeyPolicy:
        # Allow account root user to administer key (required)
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
            Resource: '*'

  QueueEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/panther-sqs
      TargetKeyId: !Ref QueueEncryptionKey

  PythonLayer:
    Condition: CreatePythonLayer
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.6
        - python3.7
      Content:
        S3Bucket: !ImportValue Panther-SourceBucket
        S3Key: !Ref PythonLayerKey
        S3ObjectVersion: !Ref PythonLayerObjectVersion
      Description: Pip libraries available to the Python analysis/remediation functions
      LayerName: panther-analysis

  ##### Nested Stacks: Core Infra #####
  WebApplicationCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: panther-web-cluster

  WebApplicationNetworking:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: web/networking.yml

  WebApplicationLoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VpcId: !GetAtt WebApplicationNetworking.Outputs.VpcId
        SubnetOneId: !GetAtt WebApplicationNetworking.Outputs.SubnetOneId
        SubnetTwoId: !GetAtt WebApplicationNetworking.Outputs.SubnetTwoId
        LoadBalancerName: web
        CertificateArn: !Ref WebApplicationCertificateArn
      TemplateURL: web/alb.yml

  FrontendApplicationServer:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ClusterName: !Ref WebApplicationCluster
        VpcId: !GetAtt WebApplicationNetworking.Outputs.VpcId
        SubnetOneId: !GetAtt WebApplicationNetworking.Outputs.SubnetOneId
        SubnetTwoId: !GetAtt WebApplicationNetworking.Outputs.SubnetTwoId
        LoadBalancerListenerArn: !GetAtt WebApplicationLoadBalancer.Outputs.LoadBalancerListenerArn
        LoadBalancerSecurityGroupId: !GetAtt WebApplicationLoadBalancer.Outputs.LoadBalancerSecurityGroupId
        GraphQLApiEndpoint: !GetAtt Appsync.Outputs.GraphQLApiEndpoint
        CognitoAppClientId: !GetAtt Cognito.Outputs.AppClientId
        CognitoUserPoolId: !GetAtt Cognito.Outputs.UserPoolId
      TemplateURL: web/server.yml

  AnalysisAPI:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ',', !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode

        ComplianceApiId: !GetAtt ComplianceAPI.Outputs.GatewayId
        S3BucketAccessLogs: !ImportValue Panther-LogBucket
        SQSKeyId: !Ref QueueEncryptionKey
      TemplateURL: ../out/deployments/core/embedded.analysis_api.yml

  AlertDelivery:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ',', !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode

        AppFqdn: !GetAtt WebApplicationLoadBalancer.Outputs.LoadBalancerUrl
        SQSKeyId: !Ref QueueEncryptionKey
      TemplateURL: core/outputs.yml

  AdminAPI:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ",", !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode
      TemplateURL: core/admin_api.yml

  Cognito:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        PantherHost: !GetAtt WebApplicationLoadBalancer.Outputs.LoadBalancerUrl
      TemplateURL: core/cognito.yml

  Appsync:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AnalysisApi: !Sub 'https://${AnalysisAPI.Outputs.GatewayId}.execute-api.${AWS::Region}.amazonaws.com'
        ComplianceApi: !Sub 'https://${ComplianceAPI.Outputs.GatewayId}.execute-api.${AWS::Region}.amazonaws.com'
        RemediationApi: !Sub 'https://${RemediationAPI.Outputs.GatewayId}.execute-api.${AWS::Region}.amazonaws.com'
        ResourcesApi: !Sub 'https://${ResourcesAPI.Outputs.GatewayId}.execute-api.${AWS::Region}.amazonaws.com'
        UserPoolId: !GetAtt Cognito.Outputs.UserPoolId
      TemplateURL: ../out/deployments/core/embedded.appsync.yml

  ##### Nested Stacks: Compliance #####
  ComplianceAPI:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ',', !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode
      TemplateURL: ../out/deployments/compliance/embedded.compliance_api.yml

  ResourcesAPI:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ',', !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode

        AnalysisApiId: !GetAtt AnalysisAPI.Outputs.GatewayId
        ComplianceApiId: !GetAtt ComplianceAPI.Outputs.GatewayId
        PythonLayerArn: !If [CreatePythonLayer, !Ref PythonLayer, !Ref PythonLayerVersionArn]
        SQSKeyId: !Ref QueueEncryptionKey
      TemplateURL: ../out/deployments/compliance/embedded.resources_api.yml

  AwsEventProcessor:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ',', !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode

        ResourcesApiId: !GetAtt ResourcesAPI.Outputs.GatewayId
        SQSKeyId: !Ref QueueEncryptionKey
      TemplateURL: compliance/aws_event_processor.yml

  SnapshotInfra:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ',', !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode

        ResourcesApiId: !GetAtt ResourcesAPI.Outputs.GatewayId
        SQSKeyId: !Ref QueueEncryptionKey
      TemplateURL: compliance/snapshot.yml

  AlertProcessing:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ',', !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode

        AnalysisApiId: !GetAtt AnalysisAPI.Outputs.GatewayId
        ComplianceApiId: !GetAtt ComplianceAPI.Outputs.GatewayId
        RemediationApiId: !GetAtt RemediationAPI.Outputs.GatewayId
        SQSKeyId: !Ref QueueEncryptionKey
      TemplateURL: compliance/alert_processing.yml

  RemediationAPI:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ',', !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode

        AnalysisApiId: !GetAtt AnalysisAPI.Outputs.GatewayId
        PythonLayerArn: !If [CreatePythonLayer, !Ref PythonLayer, !Ref PythonLayerVersionArn]
        ResourcesApiId: !GetAtt ResourcesAPI.Outputs.GatewayId
        SQSKeyId: !Ref QueueEncryptionKey
      TemplateURL: ../out/deployments/compliance/embedded.remediation.yml

  ##### Nested Stacks: Log Analysis #####
  ProcessedDataNotifications:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: panther-processed-data-notifications
      KmsMasterKeyId: !Ref QueueEncryptionKey

  ProcessedDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub panther-processed-data-${AWS::AccountId}-${AWS::Region}
      LoggingConfiguration:
        DestinationBucketName: !ImportValue Panther-LogBucket
        LogFilePrefix: !Sub panther-classified-data-${AWS::AccountId}-${AWS::Region}/
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

  LogProcessor:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ',', !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode
        SnsTopicArn: !Ref ProcessedDataNotifications
        ProcessedDataBucket: !Ref ProcessedDataBucket
        SQSKeyId: !Ref QueueEncryptionKey
        PantherDatabase: !GetAtt GlueTables.Outputs.PantherDatabase
      TemplateURL: log_analysis/log_processor.yml

  Alerts:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ',', !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode

        SQSKeyId: !Ref QueueEncryptionKey
        AnalysisApiId: !GetAtt AnalysisAPI.Outputs.GatewayId
      TemplateURL: log_analysis/alerts.yml

  RulesEngine:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [ ',', !Ref LayerVersionArns ]
        TracingMode: !Ref TracingMode
        AnalysisApiId: !GetAtt AnalysisAPI.Outputs.GatewayId
        SnsTopicArn: !Ref ProcessedDataNotifications
        SQSKeyId: !Ref QueueEncryptionKey
        ProcessedDataBucket: !Ref ProcessedDataBucket
        PythonLayerArn: !If [CreatePythonLayer, !Ref PythonLayer, !Ref PythonLayerVersionArn]
      TemplateURL: log_analysis/rules_engine.yml

  GlueTables:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ProcessedDataBucket: !Ref ProcessedDataBucket
      TemplateURL: ../out/deployments/log_analysis/gluetables.json

Outputs:
  AnalysisApiEndpoint:
    Description: panther-analysis-api Gateway HTTPS endpoint
    Value: !Sub '${AnalysisAPI.Outputs.GatewayId}.execute-api.${AWS::Region}.amazonaws.com'
  ComplianceApiEndpoint:
    Description: panther-compliance-api Gateway HTTPS endpoint
    Value: !Sub '${ComplianceAPI.Outputs.GatewayId}.execute-api.${AWS::Region}.amazonaws.com'
  ResourcesApiEndpoint:
    Description: panther-resources-api Gateway HTTPS endpoint
    Value: !Sub '${ResourcesAPI.Outputs.GatewayId}.execute-api.${AWS::Region}.amazonaws.com'
  LoadBalancerUrl:
    Description: Panther URL (application load balancer)
    Value: !GetAtt WebApplicationLoadBalancer.Outputs.LoadBalancerUrl
  UserPoolId:
    Description: Cognito user pool ID
    Value: !GetAtt Cognito.Outputs.UserPoolId
  WebApplicationCertificateArn:
    Description: ARN of the certificate used by the web application
    Value: !Ref WebApplicationCertificateArn
