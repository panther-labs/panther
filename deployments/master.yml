# Panther is a Cloud-Native SIEM for the Modern Security Team.
# Copyright (C) 2020 Panther Labs Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Master template for deploying Panther Community

Parameters:
  AccessLogsBucket:
    Type: String
    Description: External bucket for storing S3 access logs. If not specified, the Panther audit bucket is used.
    Default: ''
  AlarmTopicArn:
    Type: String
    Description: An existing SNS topic for CloudWatch alarms. If not specified, one is created for you.
    Default: ''
  CloudWatchLogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period
    Default: 365
  CustomDomain:
    Type: String
    Description: The FQDN that will be used by the web application (defaults to autogenerated ALB URL)
    Default: ''
  Debug:
    Type: String
    Description: Toggle debug logging for all components
    AllowedValues: [true, false]
    Default: false
  EnableS3AccessLogs:
    Type: String
    Description: Enable S3 access logging for all Panther buckets
    AllowedValues: [true, false]
    Default: true
  LayerVersionArns:
    Type: CommaDelimitedList
    Description: List of LayerVersion ARNs to attach to each Lambda function
    Default: ''
  LogProcessorLambdaMemorySize:
    Type: Number
    Description: Log processor Lambda memory allocation
    MinValue: 256 # any smaller and we risk OOMs
    MaxValue: 3008
    Default: 1024
  LogSubscriptionPrincipals:
    Type: CommaDelimitedList
    Description: List of Principal ARNs to allow read access to the ProcessedDataBucket and subscribe access to ProcessedDataTopicArn
    Default: ''
  PythonLayerVersionArn:
    Type: String
    Description: Custom Python layer for analysis and remediation. Defaults to a pre-built layer with 'policyuniverse' and 'requests' pip libraries
    Default: ''
  TracingMode:
    Type: String
    Description: Enable XRay tracing on Lambda, API Gateway, and GraphQL
    AllowedValues: ['', Active, PassThrough]
    Default: ''

# TODO: what to use for region and account?
# TODO: do we need to publish a SAR app in every supported region?

Mappings:
  SAR:
    Constants:
      Version: 1.4.0-charlie

Resources:
  Bootstrap:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:101802775469:applications/panther-community-bootstrap
        SemanticVersion: !FindInMap [SAR, Constants, Version]
      Parameters:
        AccessLogsBucket: !Ref AccessLogsBucket
        AlarmTopicArn: !Ref AlarmTopicArn
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        CustomDomain: !Ref CustomDomain
        Debug: !Ref Debug
        EnableS3AccessLogs: !Ref EnableS3AccessLogs
        LogSubscriptionPrincipals: !Join [',', !Ref LogSubscriptionPrincipals]
        TracingMode: !Ref TracingMode
      Tags:
        Application: Panther
        # SAM will automatically apply the following tags:
        #   lambda:createdBy = SAM
        #   serverlessrepo:applicationId
        #   serverlessrepo:semanticVersion
      TimeoutInMinutes: 20

  BootstrapGateway:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:101802775469:applications/panther-community-bootstrap-gateway
        SemanticVersion: !FindInMap [SAR, Constants, Version]
      Parameters:
        # If the AlarmTopicArn parameter is blank, Bootstrap will create the topic.
        # That's why this uses the Bootstrap output instead of the parameter.
        AlarmTopicArn: !GetAtt Bootstrap.Outputs.AlarmTopicArn

        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        LayerVersionArns: !Join [',', !Ref LayerVersionArns]
        PythonLayerVersionArn: !Ref PythonLayerVersionArn
        TracingMode: !Ref TracingMode
        UserPoolId: !GetAtt Bootstrap.Outputs.UserPoolId
      Tags:
        Application: Panther
      TimeoutInMinutes: 15

  Appsync:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:101802775469:applications/panther-community-appsync
        SemanticVersion: !FindInMap [SAR, Constants, Version]
      Parameters:
        AlarmTopicArn: !GetAtt Bootstrap.Outputs.AlarmTopicArn
        AnalysisApi: !Sub https://${BootstrapGateway.Outputs.AnalysisApiEndpoint}
        ApiId: !GetAtt Bootstrap.Outputs.GraphQLApiId
        ComplianceApi: !Sub https://${BootstrapGateway.Outputs.ComplianceApiEndpoint}
        RemediationApi: !Sub https://${BootstrapGateway.Outputs.RemediationApiEndpoint}
        ResourcesApi: !Sub https://${BootstrapGateway.Outputs.ResourcesApiEndpoint}
        ServiceRole: !GetAtt Bootstrap.Outputs.AppsyncServiceRoleArn
      Tags:
        Application: Panther
      TimeoutInMinutes: 15

  CloudSecurity:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:101802775469:applications/panther-community-cloud-security
        SemanticVersion: !FindInMap [SAR, Constants, Version]
      Parameters:
        AlarmTopicArn: !GetAtt Bootstrap.Outputs.AlarmTopicArn
        AnalysisApiId: !GetAtt BootstrapGateway.Outputs.AnalysisApiId
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        ComplianceApiId: !GetAtt BootstrapGateway.Outputs.ComplianceApiId
        Debug: !Ref Debug
        LayerVersionArns: !Join [',', !Ref LayerVersionArns]
        ProcessedDataBucket: !GetAtt Bootstrap.Outputs.ProcessedDataBucket
        ProcessedDataTopicArn: !GetAtt Bootstrap.Outputs.ProcessedDataTopicArn
        PythonLayerVersionArn: !GetAtt BootstrapGateway.Outputs.PythonLayerVersionArn
        RemediationApiId: !GetAtt BootstrapGateway.Outputs.RemediationApiId
        ResourcesApiId: !GetAtt BootstrapGateway.Outputs.ResourcesApiId
        SqsKeyId: !GetAtt Bootstrap.Outputs.QueueEncryptionKeyId
        TracingMode: !Ref TracingMode
      Tags:
        Application: Panther
      TimeoutInMinutes: 15

  Core:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:101802775469:applications/panther-community-core
        SemanticVersion: !FindInMap [SAR, Constants, Version]
      Parameters:
        AlarmTopicArn: !GetAtt Bootstrap.Outputs.AlarmTopicArn
        AppDomainURL: !GetAtt Bootstrap.Outputs.LoadBalancerUrl
        AnalysisApiId: !GetAtt BootstrapGateway.Outputs.AnalysisApiId
        AnalysisVersionsBucket: !GetAtt Bootstrap.Outputs.AnalysisVersionsBucket
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        ComplianceApiId: !GetAtt BootstrapGateway.Outputs.ComplianceApiId
        Debug: !Ref Debug
        DynamoScalingRoleArn: !GetAtt Bootstrap.Outputs.DynamoScalingRoleArn
        LayerVersionArns: !Join [',', !Ref LayerVersionArns]
        OutputsKeyId: !GetAtt Bootstrap.Outputs.OutputsEncryptionKeyId
        SqsKeyId: !GetAtt Bootstrap.Outputs.QueueEncryptionKeyId
        TracingMode: !Ref TracingMode
        UserPoolId: !GetAtt Bootstrap.Outputs.UserPoolId
      Tags:
        Application: Panther
      TimeoutInMinutes: 15

  LogAnalysis:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:101802775469:applications/panther-community-log-analysis
        SemanticVersion: !FindInMap [SAR, Constants, Version]
      Parameters:
        AlarmTopicArn: !GetAtt Bootstrap.Outputs.AlarmTopicArn
        AnalysisApiId: !GetAtt BootstrapGateway.Outputs.AnalysisApiId
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [',', !Ref LayerVersionArns]
        LogProcessorLambdaMemorySize: !Ref LogProcessorLambdaMemorySize
        ProcessedDataBucket: !GetAtt Bootstrap.Outputs.ProcessedDataBucket
        ProcessedDataTopicArn: !GetAtt Bootstrap.Outputs.ProcessedDataTopicArn
        PythonLayerVersionArn: !GetAtt BootstrapGateway.Outputs.PythonLayerVersionArn
        SqsKeyId: !GetAtt Bootstrap.Outputs.QueueEncryptionKeyId
        TracingMode: !Ref TracingMode
      Tags:
        Application: Panther
      TimeoutInMinutes: 15

Outputs:
  GraphQlUrl:
    Description: The URL for the AppSync GraphQL endpoint
    Value: !GetAtt Bootstrap.Outputs.GraphQLApiEndpoint
  LoadBalancerUrl:
    Description: Panther URL - application load balancer or custom domain
    Value: !GetAtt Bootstrap.Outputs.LoadBalancerUrl
