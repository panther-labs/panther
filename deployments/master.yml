# Panther is a Cloud-Native SIEM for the Modern Security Team.
# Copyright (C) 2020 Panther Labs Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

AWSTemplateFormatVersion: 2010-09-09
Description: Master template for deploying Panther Community

Parameters:
  AccessLogsBucket:
    Type: String
    Description: External bucket for storing S3 access logs. If not specified, the Panther audit bucket is used.
    Default: ''
  AlarmTopicArn:
    Type: String
    Description: An existing SNS topic for CloudWatch alarms. If not specified, one is created for you.
    Default: ''
  CloudWatchLogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period
    Default: 365
  CustomDomain:
    Type: String
    Description: The FQDN that will be used by the web application (defaults to autogenerated ALB URL)
    Default: ''
  DataReplicationBucket:
    Type: String
    Description: Optional external bucket for backing up processed data in s3 glacier.
    Default: ''
  Debug:
    Type: String
    Description: Toggle debug logging for all components
    AllowedValues: [true, false]
    Default: false
  EnableCloudTrail:
    Type: String
    Description: Create a Panther CloudTrail in this account configured for log processing. Has no effect if OnboardSelf=false
    AllowedValues: [true, false]
    Default: false
  EnableGuardDuty:
    Type: String
    Description: Create a Panther GuardDuty in this account configured for log processing. Has no effect if OnboardSelf=false
    AllowedValues: [true, false]
    Default: false
  EnableS3AccessLogs:
    Type: String
    Description: Enable S3 access logging for all Panther buckets
    AllowedValues: [true, false]
    Default: true
  LayerVersionArns:
    Type: CommaDelimitedList
    Description: List of LayerVersion ARNs to attach to each Lambda function
    Default: ''
  LogProcessorLambdaMemorySize:
    Type: Number
    Description: Log processor Lambda memory allocation
    MinValue: 256 # any smaller and we risk OOMs
    MaxValue: 3008
    Default: 1024
  LogSubscriptionPrincipals:
    Type: CommaDelimitedList
    Description: List of Principal ARNs to allow read access to the ProcessedDataBucket and subscribe access to ProcessedDataTopicArn
    Default: ''
  OnboardSelf:
    Type: String
    Description: Panther automatically onboards itself as a data source
    AllowedValues: [true, false]
    Default: true
  PythonLayerVersionArn:
    Type: String
    Description: Custom Python layer for analysis and remediation. Defaults to a pre-built layer with 'policyuniverse' and 'requests' pip libraries
    Default: ''
  TracingMode:
    Type: String
    Description: Enable XRay tracing on Lambda, API Gateway, and GraphQL
    AllowedValues: ['', Active, PassThrough]
    Default: ''

Mappings:
  Constants:
    Panther:
      Version: 1.4.0

Conditions:
  OnboardSelf: !Equals [!Ref OnboardSelf, true]

Resources:
  Bootstrap:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: bootstrap.yml
      Parameters:
        AccessLogsBucket: !Ref AccessLogsBucket
        AlarmTopicArn: !Ref AlarmTopicArn
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        CustomDomain: !Ref CustomDomain
        DataReplicationBucket: !Ref DataReplicationBucket
        Debug: !Ref Debug
        EnableS3AccessLogs: !Ref EnableS3AccessLogs
        LogSubscriptionPrincipals: !Join [',', !Ref LogSubscriptionPrincipals]
        TracingMode: !Ref TracingMode
      Tags:
        - Key: Application
          Value: Panther
        - Key: PantherEdition
          Value: Community
        - Key: PantherVersion
          Value: !FindInMap [Constants, Panther, Version]
        - Key: Stack
          Value: panther-bootstrap # friendly name, not actual stack name

  BootstrapGateway:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../out/deployments/embedded.bootstrap_gateway.yml # generated by 'mage build:cfn'
      Parameters:
        # If the AlarmTopicArn parameter is blank, Bootstrap will create the topic.
        # That's why this uses the Bootstrap output instead of the parameter.
        AlarmTopicArn: !GetAtt Bootstrap.Outputs.AlarmTopicArn
        AthenaResultsBucket: !GetAtt Bootstrap.Outputs.AthenaResultsBucket
        AuditLogsBucket: !GetAtt Bootstrap.Outputs.AuditLogsBucket
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        LayerVersionArns: !Join [',', !Ref LayerVersionArns]
        ProcessedDataBucket: !GetAtt Bootstrap.Outputs.ProcessedDataBucket
        PythonLayerVersionArn: !Ref PythonLayerVersionArn
        TracingMode: !Ref TracingMode
        UserPoolId: !GetAtt Bootstrap.Outputs.UserPoolId
      Tags:
        - Key: Application
          Value: Panther
        - Key: PantherEdition
          Value: Community
        - Key: PantherVersion
          Value: !FindInMap [Constants, Panther, Version]
        - Key: Stack
          Value: panther-bootstrap-gateway

  Appsync:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: appsync.yml
      Parameters:
        AlarmTopicArn: !GetAtt Bootstrap.Outputs.AlarmTopicArn
        AnalysisApi: !Sub https://${BootstrapGateway.Outputs.AnalysisApiEndpoint}
        ApiId: !GetAtt Bootstrap.Outputs.GraphQLApiId
        ComplianceApi: !Sub https://${BootstrapGateway.Outputs.ComplianceApiEndpoint}
        RemediationApi: !Sub https://${BootstrapGateway.Outputs.RemediationApiEndpoint}
        ResourcesApi: !Sub https://${BootstrapGateway.Outputs.ResourcesApiEndpoint}
        ServiceRole: !GetAtt Bootstrap.Outputs.AppsyncServiceRoleArn
      Tags:
        - Key: Application
          Value: Panther
        - Key: PantherEdition
          Value: Community
        - Key: PantherVersion
          Value: !FindInMap [Constants, Panther, Version]
        - Key: Stack
          Value: panther-appsync

  CloudSecurity:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: cloud_security.yml
      Parameters:
        AlarmTopicArn: !GetAtt Bootstrap.Outputs.AlarmTopicArn
        AnalysisApiId: !GetAtt BootstrapGateway.Outputs.AnalysisApiId
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        ComplianceApiId: !GetAtt BootstrapGateway.Outputs.ComplianceApiId
        Debug: !Ref Debug
        LayerVersionArns: !Join [',', !Ref LayerVersionArns]
        ProcessedDataBucket: !GetAtt Bootstrap.Outputs.ProcessedDataBucket
        ProcessedDataTopicArn: !GetAtt Bootstrap.Outputs.ProcessedDataTopicArn
        PythonLayerVersionArn: !GetAtt BootstrapGateway.Outputs.PythonLayerVersionArn
        RemediationApiId: !GetAtt BootstrapGateway.Outputs.RemediationApiId
        ResourcesApiId: !GetAtt BootstrapGateway.Outputs.ResourcesApiId
        SqsKeyId: !GetAtt Bootstrap.Outputs.QueueEncryptionKeyId
        TracingMode: !Ref TracingMode
      Tags:
        - Key: Application
          Value: Panther
        - Key: PantherEdition
          Value: Community
        - Key: PantherVersion
          Value: !FindInMap [Constants, Panther, Version]
        - Key: Stack
          Value: panther-cloud-security

  Core:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: core.yml
      Parameters:
        AlarmTopicArn: !GetAtt Bootstrap.Outputs.AlarmTopicArn
        AppDomainURL: !GetAtt Bootstrap.Outputs.LoadBalancerUrl
        AnalysisApiId: !GetAtt BootstrapGateway.Outputs.AnalysisApiId
        AnalysisVersionsBucket: !GetAtt Bootstrap.Outputs.AnalysisVersionsBucket
        AthenaResultsBucket: !GetAtt Bootstrap.Outputs.AthenaResultsBucket
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        ComplianceApiId: !GetAtt BootstrapGateway.Outputs.ComplianceApiId
        Debug: !Ref Debug
        DynamoScalingRoleArn: !GetAtt Bootstrap.Outputs.DynamoScalingRoleArn
        LayerVersionArns: !Join [',', !Ref LayerVersionArns]
        OutputsKeyId: !GetAtt Bootstrap.Outputs.OutputsEncryptionKeyId
        ProcessedDataBucket: !GetAtt Bootstrap.Outputs.ProcessedDataBucket
        SqsKeyId: !GetAtt Bootstrap.Outputs.QueueEncryptionKeyId
        TracingMode: !Ref TracingMode
        UserPoolId: !GetAtt Bootstrap.Outputs.UserPoolId
      Tags:
        - Key: Application
          Value: Panther
        - Key: PantherEdition
          Value: Community
        - Key: PantherVersion
          Value: !FindInMap [Constants, Panther, Version]
        - Key: Stack
          Value: panther-core

  Dashboards:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: dashboards.yml
      Tags:
        - Key: Application
          Value: Panther
        - Key: PantherEdition
          Value: Community
        - Key: PantherVersion
          Value: !FindInMap [Constants, Panther, Version]
        - Key: Stack
          Value: panther-cw-dashboards

  LogAnalysis:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: log_analysis.yml
      Parameters:
        AlarmTopicArn: !GetAtt Bootstrap.Outputs.AlarmTopicArn
        AnalysisApiId: !GetAtt BootstrapGateway.Outputs.AnalysisApiId
        AthenaResultsBucket: !GetAtt Bootstrap.Outputs.AthenaResultsBucket
        CloudWatchLogRetentionDays: !Ref CloudWatchLogRetentionDays
        Debug: !Ref Debug
        LayerVersionArns: !Join [',', !Ref LayerVersionArns]
        LogProcessorLambdaMemorySize: !Ref LogProcessorLambdaMemorySize
        ProcessedDataBucket: !GetAtt Bootstrap.Outputs.ProcessedDataBucket
        ProcessedDataTopicArn: !GetAtt Bootstrap.Outputs.ProcessedDataTopicArn
        PythonLayerVersionArn: !GetAtt BootstrapGateway.Outputs.PythonLayerVersionArn
        SqsKeyId: !GetAtt Bootstrap.Outputs.QueueEncryptionKeyId
        TablesSignature: !FindInMap [Constants, Panther, Version] # this changes with version, forcing table schema updates
        TracingMode: !Ref TracingMode
      Tags:
        - Key: Application
          Value: Panther
        - Key: PantherEdition
          Value: Community
        - Key: PantherVersion
          Value: !FindInMap [Constants, Panther, Version]
        - Key: Stack
          Value: panther-log-analysis

  Onboard:
    Condition: OnboardSelf
    # Onboard stack adds new source integrations, which requires custom resources (bootstrap-gateway),
    # source-api (core), and queues from cloud-security and log-analysis to exist.
    DependsOn: [BootstrapGateway, CloudSecurity, Core, LogAnalysis]
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: onboard.yml
      Parameters:
        AlarmTopicArn: !GetAtt Bootstrap.Outputs.AlarmTopicArn
        AuditLogsBucket: !GetAtt Bootstrap.Outputs.AuditLogsBucket
        EnableCloudTrail: !Ref EnableCloudTrail
        EnableGuardDuty: !Ref EnableGuardDuty
        EnableS3AccessLogs: !Ref EnableS3AccessLogs
        VpcId: !GetAtt Bootstrap.Outputs.VpcId
      Tags:
        - Key: Application
          Value: Panther
        - Key: PantherEdition
          Value: Community
        - Key: PantherVersion
          Value: !FindInMap [Constants, Panther, Version]
        - Key: Stack
          Value: panther-onboard

Outputs:
  GraphQlUrl:
    Description: The URL for the AppSync GraphQL endpoint
    Value: !GetAtt Bootstrap.Outputs.GraphQLApiEndpoint
  LoadBalancerUrl:
    Description: Panther URL serving the web app
    Value: !Sub https://${Bootstrap.Outputs.LoadBalancerUrl}
