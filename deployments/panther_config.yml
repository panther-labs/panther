# Panther is a scalable, powerful, cloud-native SIEM written in Golang/React.
# Copyright (C) 2020 Panther Labs Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

##### Panther deployment configuration #####

Infra:
  # Comma-delimited list of LayerVersions to attach to every Lambda function.
  #
  # For example, this could be a serverless monitoring/security service.
  BaseLayerVersionArns: ''

  # Lambda functions scale memory and CPU together.
  # Those with the smallest memory are slower and cheaper.
  # Those with the larger memory are faster and more expensive.
  # If cost is more of a concern compared to performance, choose
  # a small memory size, however, for extremely large log volumes
  # the larger sizes may be required for adequate performance or large files.
  LogProcessorLambdaMemorySize: 1024 # 256 - 3008, in 64MB increments

  # Create a Python layer with these pip library versions.
  #
  # This makes it easy to add your own pip libraries for analysis and remediation.
  # Natively compiled libraries (e.g. numpy) are not currently supported: build a custom layer instead.
  #
  # This setting has no effect if PythonLayerVersionArn is set below.
  PipLayer:
    - boto3==1.12.24
    - policyuniverse==1.3.2.1
    - requests==2.23.0

  # Custom layer attached to every Python Lambda function for analysis and remediation.
  #
  # If not specified, a layer is created for you based on the PipLayer setting above.
  PythonLayerVersionArn: ''

Monitoring:
  # This is the arn for the SNS topic you want associated with Panther system alarms.
  # If this is not set alarms will be associated with the SNS topic `panther-alarms`.
  AlarmSnsTopicArn: ''

  # Retention period for all Panther CloudWatch log groups.
  CloudWatchLogRetentionDays: 365

  # Enable DEBUG logging for all Lambda functions.
  Debug: false

  # XRay tracing mode for API Gateway and Lambda: '', 'Active', or 'PassThrough'
  TracingMode: ''

Setup:
  # List of policy/rule sets to install if the existing ruleset is empty
  # (e.g. when Panther is first deployed).
  #
  # Entries can be URLs or file:// paths that point to a .zip file.
  # If the analysis-api is non-empty, this setting is ignored and you can instead
  # use the BulkUpload functionality from the web app to upload new or modified rule sets.
  InitialAnalysisSets:
    - https://github.com/panther-labs/panther-analysis/releases/latest/download/panther-analysis-all.zip

  # Enable S3 access logs for Panther buckets.
  # Doing so is a strongly recommend security practice, but can come at a high cost
  # when processing large volumes of data.
  #
  # Access logs are sent either to the S3AccessLogsBucket below or a the panther audit bucket created for you.
  EnableS3AccessLogs: true

  # Optionally use an existing S3 bucket for storing S3 access logs.
  # If not specified, the generated panther audit logs bucket is used for access logs as well.
  #
  # Has no effect if EnableS3AccessLogs=false above.
  S3AccessLogsBucket: ''

  # Whether or not the Panther deployment should automatically onboard itself as a data source.
  OnboardSelf: true

  # Whether or not to create a CloudTrail in the Panther account and monitor.
  # You may want this off if you have org-level CT configured for Panther to avoid ingesting the same data twice.
  EnableCloudTrail: false

  # Whether or not to enable GuardDuty in the Panther account and monitor.
  # You may want this off if you have org-level GD configured for Panther.
  EnableGuardDuty: false

  # Grant external access to the Panther processed data.
  LogSubscriptions:
    # A list of ARNs of Principals that want to subscribe to log data.
    # These ARNs will be granted read permission on the processed log bucket and
    # SNS subscribe permission to the panther-processed-data-notifications topic.
    PrincipalARNs:
      -

Web:
  # ARN of an AWS ACM certificate used on the loadbalancer presenting the panther web app
  #
  # If not specified, a self signed certificate is created automatically.
  # WARNING: SELF SIGNED CERTIFICATES ARE NOT SAFE TO USE IN PRODUCTION, PLEASE
  # PROVIDE A CERTIFICATE FOR PRODUCTION USE
  CertificateArn: ''

  # Domain that you own and have configured to alias to the default load balancer URL
  #
  # If not specified, the default load balancer URL is used in all places.
  CustomDomain: ''
