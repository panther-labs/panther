# Panther is a scalable, powerful, cloud-native SIEM written in Golang/React.
# Copyright (C) 2020 Panther Labs Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Compliance API - pass/fail tracking for policy/resource pairs

Parameters:
  CloudWatchLogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period
    Default: 365
  Debug:
    Type: String
    Description: Toggle debug logging
    Default: false
    AllowedValues: [true, false]
  LayerVersionArns:
    Type: CommaDelimitedList
    Description: List of base LayerVersion ARNs to attach to every Lambda function
    Default: ''
  TracingMode:
    Type: String
    Description: Enable XRay tracing on Lambda and API Gateway
    AllowedValues: ['', Active, PassThrough]
    Default: ''

Conditions:
  AttachLayers: !Not [!Equals [!Join ['', !Ref LayerVersionArns], '']]
  TracingEnabled: !Not [!Equals ['', !Ref TracingMode]]

Resources:
  GatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionBody: api/gateway/compliance/api.yml
      EndpointConfiguration: REGIONAL
      Name: panther-compliance-api
      StageName: v1 # NOTE: sam also builds a stage called "Stage"
      TracingEnabled: !If [TracingEnabled, true, false]

  Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../bin/internal/compliance/compliance_api/main # Relative to out/deployments/compliance
      Description: Compliance API
      Environment:
        Variables:
          COMPLIANCE_TABLE: !Ref ComplianceTable
          DEBUG: !Ref Debug
          INDEX_NAME: policy-index
      FunctionName: panther-compliance-api
      Handler: main
      MemorySize: 512
      Runtime: go1.x
      Layers: !If [AttachLayers, !Ref LayerVersionArns, !Ref 'AWS::NoValue']
      Timeout: 180
      Tracing: !If [TracingEnabled, !Ref TracingMode, !Ref 'AWS::NoValue']
      Policies:
        - Id: DynamoManageItems
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Query
                - dynamodb:*Item
                - dynamodb:Scan
              Resource:
                - !GetAtt ComplianceTable.Arn
                - !Sub
                  - '${arn}/index/*'
                  - arn: !GetAtt ComplianceTable.Arn

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/panther-compliance-api
      RetentionInDays: !Ref CloudWatchLogRetentionDays

  GatewayInvocationPermission: # allow API gateway to invoke the Lambda function
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref Function
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${GatewayApi}/*

  ComplianceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: panther-compliance
      AttributeDefinitions:
        - AttributeName: policyId
          AttributeType: S
        - AttributeName: resourceId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - # Add an index for policyId to efficiently search for a specific policy
          KeySchema:
            - AttributeName: policyId
              KeyType: HASH
          IndexName: policy-index
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: resourceId
          KeyType: HASH
        - AttributeName: policyId
          KeyType: RANGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: True
      SSESpecification:
        SSEEnabled: True
      TimeToLiveSpecification:
        AttributeName: expiresAt
        Enabled: True

Outputs:
  GatewayId:
    Description: API Gateway ID
    Value: !Ref GatewayApi
