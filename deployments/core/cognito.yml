# Panther is a scalable, powerful, cloud-native SIEM written in Golang/React.
# Copyright (C) 2020 Panther Labs Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Cognito User Pool

Parameters:
  CloudWatchLogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period
    Default: 365
  Debug:
    Type: String
    Default: false
    Description: Toggle debug logging
    AllowedValues: [true, false]
  LayerVersionArns:
    Type: CommaDelimitedList
    Description: List of LayerVersion ARNs to attach to each function
    Default: ''
  TracingMode:
    Type: String
    Description: Enable XRay tracing on Lambda and API Gateway
    AllowedValues: ['', Active, PassThrough]
    Default: ''
  PantherHost:
    Type: String
    Description: Load balancer URL hosting the deployed Panther website

  CustomMessageMemorySizeMB:
    Type: Number
    Description: Memory (MB) available for the custom-message-trigger Lambda function
    Default: 128
    MinValue: 128
    MaxValue: 3008
  CustomMessageTimeoutSec:
    Type: Number
    Description: Timeout (seconds) for the custom-message-trigger Lambda function
    Default: 60
    MinValue: 5
    MaxValue: 900

Conditions:
  AttachLayers: !Not [!Equals [!Join ['', !Ref LayerVersionArns], '']]
  TracingEnabled: !Not [!Equals ['', !Ref TracingMode]]

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
        InviteMessageTemplate:
          EmailSubject: Welcome to Panther!
          EmailMessage: !Sub |
            <br />Welcome to Panther! We're very excited to have you on board!
            <br />
            <br />To get started, sign in to your <a href="https://${PantherHost}/sign-in">Panther dashboard</a> with the following temporary credentials:
            <br />
            <br />* Username: {username}
            <br />* Password: {####}
            <br />
            <br />Need help, or have questions? Just email us at support@runpanther.io, we'd love to help.
            <br />
            <br />Yours truly,
            <br />Panther - https://runpanther.io
            <br />
            <br /><small>Copyright Â© 2020 Panther Labs Inc. All rights reserved.</small>
      AutoVerifiedAttributes: # Attributes you want the user to verify (poor naming choice by AWS)
        - email
      LambdaConfig:
        CustomMessage: !GetAtt CustomMessageTriggerFunction.Arn
      Policies:
        PasswordPolicy:
          MinimumLength: 12
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
        - AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Name: email
          Required: true
        - AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Name: given_name
        - AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Name: family_name
      UsernameAttributes:
        - email
      UserPoolName: panther-users

  AppClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: Panther
      GenerateSecret: false
      RefreshTokenValidity: 1
      UserPoolId: !Ref UserPool
      WriteAttributes:
        - email
        - given_name
        - family_name

  ##### Custom message trigger function #####
  CustomMessageTriggerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/panther-cognito-custom-message-trigger
      RetentionInDays: !Ref CloudWatchLogRetentionDays

  CustomMessageTriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../out/bin/internal/core/custom_message/main
      Description: Custom message trigger for Cognito user events
      Environment:
        Variables:
          DEBUG: !Ref Debug
          APP_DOMAIN_URL: !Ref PantherHost
      FunctionName: panther-cognito-custom-message-trigger
      Handler: main
      Layers: !If [AttachLayers, !Ref LayerVersionArns, !Ref 'AWS::NoValue']
      MemorySize: !Ref CustomMessageMemorySizeMB
      Runtime: go1.x
      Timeout: !Ref CustomMessageTimeoutSec
      Tracing: !If [TracingEnabled, !Ref TracingMode, !Ref 'AWS::NoValue']
      Policies:
        - Id: GetCognitoUsers
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: cognito-idp:AdminGetUser
              Resource: !Sub arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/*

  CustomMessageTriggerInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CustomMessageTriggerFunction.Arn
      Action: lambda:InvokeFunction
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Sub arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/*

Outputs:
  UserPoolId:
    Description: Cognito user pool ID
    Value: !Ref UserPool
  AppClientId:
    Description: Cognito user pool client ID
    Value: !Ref AppClient
