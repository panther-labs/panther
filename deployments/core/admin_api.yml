# Panther is a scalable, powerful, cloud-native SIEM written in Golang/React.
# Copyright (C) 2020 Panther Labs Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Users, Organization, and Onboarding APIs

Parameters:
  CloudWatchLogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period
    Default: 365
  Debug:
    Type: String
    Default: false
    Description: Toggle debug logging
    AllowedValues: [true, false]
  LayerVersionArns:
    Type: CommaDelimitedList
    Description: List of LayerVersion ARNs to attach to each function
    Default: ''
  TracingMode:
    Type: String
    Description: Enable XRay tracing on Lambda and API Gateway
    AllowedValues: ['', Active, PassThrough]
    Default: ''

  AppDomainURL:
    Type: String
    Description: Panther App Domain used as a link for the customer in the password reset email
  UserPoolId:
    Type: String
    Description: Cognito user pool ID

Conditions:
  AttachLayers: !Not [!Equals [!Join ['', !Ref LayerVersionArns], '']]
  TracingEnabled: !Not [!Equals ['', !Ref TracingMode]]

Resources:
  #### Users API ####
  UsersAPILogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/panther-users-api
      RetentionInDays: !Ref CloudWatchLogRetentionDays

  UsersAPIFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../out/bin/internal/core/users_api/main
      Description: CRUD actions for the cognito api
      Environment:
        Variables:
          DEBUG: !Ref Debug
          USER_POOL_ID: !Ref UserPoolId
      FunctionName: panther-users-api
      Handler: main
      Layers: !If [AttachLayers, !Ref LayerVersionArns, !Ref 'AWS::NoValue']
      MemorySize: 128
      Runtime: go1.x
      Timeout: 60
      Tracing: !If [TracingEnabled, !Ref TracingMode, !Ref 'AWS::NoValue']
      Policies:
        - Id: CognitoUserManagement
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminCreateUser
                - cognito-idp:AdminDeleteUser
                - cognito-idp:AdminDisableUser
                - cognito-idp:AdminEnableUser
                - cognito-idp:AdminGetUser
                - cognito-idp:AdminResetUserPassword
                - cognito-idp:AdminUpdateUserAttributes
                - cognito-idp:GetUser
                - cognito-idp:ListUsers
              Resource: !Sub arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}
        - Id: AppsyncManagement
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - appsync:GetGraphqlApi
                - appsync:ListGraphqlApis
                - appsync:UpdateGraphqlApi
              Resource: !Sub arn:${AWS::Partition}:appsync:${AWS::Region}:${AWS::AccountId}:*

  ##### Custom message trigger function #####
  CustomMessageTriggerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/panther-cognito-custom-message-trigger
      RetentionInDays: !Ref CloudWatchLogRetentionDays

  CustomMessageTriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../out/bin/internal/core/custom_message/main
      Description: Custom message trigger for Cognito user events
      Environment:
        Variables:
          DEBUG: !Ref Debug
          APP_DOMAIN_URL: !Ref AppDomainURL
          USER_POOL_ID: !Ref UserPoolId
      FunctionName: panther-cognito-custom-message-trigger
      Handler: main
      Layers: !If [AttachLayers, !Ref LayerVersionArns, !Ref 'AWS::NoValue']
      MemorySize: 128
      Runtime: go1.x
      Timeout: 60
      Tracing: !If [TracingEnabled, !Ref TracingMode, !Ref 'AWS::NoValue']
      Policies:
        - Id: GetCognitoUsers
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: cognito-idp:AdminGetUser
              Resource: !Sub arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/*

  CustomMessageTriggerInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt CustomMessageTriggerFunction.Arn
      Action: lambda:InvokeFunction
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Sub arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/*

  ##### Organization API #####
  OrganizationTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      PointInTimeRecoverySpecification: # Create periodic table backups
        PointInTimeRecoveryEnabled: True
      SSESpecification: # Enable server-side encryption
        SSEEnabled: True
      TableName: panther-organization

  OrganizationAPILogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/panther-organization-api
      RetentionInDays: !Ref CloudWatchLogRetentionDays

  OrganizationAPIFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../out/bin/internal/core/organization_api/main
      Description: CRUD actions for the organization database
      Environment:
        Variables:
          DEBUG: !Ref Debug
          ORG_TABLE_NAME: !Ref OrganizationTable
      FunctionName: panther-organization-api
      Handler: main
      Layers: !If [AttachLayers, !Ref LayerVersionArns, !Ref 'AWS::NoValue']
      MemorySize: 128
      Runtime: go1.x
      Timeout: 60
      Tracing: !If [TracingEnabled, !Ref TracingMode, !Ref 'AWS::NoValue']
      Policies:
        - Id: ManageOrganizationTable
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:*Item
                - dynamodb:Scan
              Resource: !GetAtt OrganizationTable.Arn
