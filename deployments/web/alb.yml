# Panther is a scalable, powerful, cloud-native SIEM written in Golang/React.
# Copyright (C) 2020 Panther Labs Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

AWSTemplateFormatVersion: 2010-09-09
Description: The Application Load Balancer that will accept external connections and will forward that to our web service & tasks.

Parameters:
  AuditLogsBucket:
    Type: String
    Description: The name of the S3 bucket which stores Pather audit logs
  VpcId:
    Type: String
    Description: The ID of the VPC associated with the application load balancer
  SubnetOneId:
    Type: String
    Description: The ID of a subnet in the VPC above
  SubnetTwoId:
    Type: String
    Description: The ID of another subnet in the VPC above
  CertificateArn:
    Type: String
    Description: The ARN of the TLS certificate that is going to be used by the ALB listener

Resources:
  # Public load balancer, hosted in public subnets that is accessible
  # to the public, and is intended to route traffic to one or more public
  # facing services. This is used for accepting traffic from the public
  # internet and directing it to public facing microservices
  PublicLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: web-lb
      GroupDescription: Access to the public facing load balancer
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # Allow access to ALB from anywhere on the internet. If you want to restrict access to the
        # load balancer from specific IPs, add your own network CIDRs.
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp

  PublicLoadBalancer:
    DependsOn: PublicLoadBalancerLoggingBucketPolicy
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: web
      # <cfndoc>
      # The load balancer associated with the Panther UI.
      #
      # Failure Impact
      # * The Panther user interface will not be available.
      # </cfndoc>
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '30'
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value: !Ref AuditLogsBucket
      Subnets:
        - !Ref SubnetOneId
        - !Ref SubnetTwoId
      SecurityGroups:
        - !Ref PublicLoadBalancerSecurityGroup

  # https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html
  PublicLoadBalancerLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AuditLogsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !FindInMap [ELBAccounts, !Ref 'AWS::Region', ARN]
            Action: s3:PutObject
            Resource: !Sub arn:aws:s3:::${AuditLogsBucket}/*

  # A dummy target group is used to setup the ALB to just drop traffic
  # initially, before any real service target groups have been added.
  #
  # THIS TARGET GROUP IS NOT USED AT ALL. IT'S JUST THERE FOR INITIAL ALB SETUP PURPOSES
  #
  DummyTargetGroupPublic:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId

  PublicLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref CertificateArn
      DefaultActions:
        - TargetGroupArn: !Ref DummyTargetGroupPublic
          Type: forward
      LoadBalancerArn: !Ref PublicLoadBalancer
      Port: 443
      Protocol: HTTPS

Outputs:
  LoadBalancerFullName:
    Description: The name of the ALB
    Value: !GetAtt PublicLoadBalancer.LoadBalancerFullName
  LoadBalancerListenerArn:
    Description: The ARN of the public load balancer that accepts & forwards incoming traffic to ECS tasks
    Value: !Ref PublicLoadBalancerListener
  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt PublicLoadBalancer.DNSName
  LoadBalancerSecurityGroupId:
    Description: The Security Group ID associated with the Public Loadbalancer that we have created
    Value: !Ref PublicLoadBalancerSecurityGroup

Mappings:
  # OMG, I can't believe they make people do this ...
  ELBAccounts: # https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.htm
    us-east-1:
      ARN: arn:aws:iam::127311923021:root
    us-east-2:
      ARN: arn:aws:iam::033677994240:root
    us-west-1:
      ARN: arn:aws:iam::027434742980:root
    us-west-2:
      ARN: arn:aws:iam::797873946194:root
    ca-central-1:
      ARN: arn:aws:iam::985666609251:root
    eu-central-1:
      ARN: arn:aws:iam::054676820928:root
    eu-west-1:
      ARN: arn:aws:iam::156460612806:root
    eu-west-2:
      ARN: arn:aws:iam::652711504416:root
    eu-west-3:
      ARN: arn:aws:iam::009996457667:root
    eu-north-1:
      ARN: arn:aws:iam::897822967062:root
    ap-east-1:
      ARN: arn:aws:iam::754344448648:root
    ap-northeast-1:
      ARN: arn:aws:iam::582318560864:root
    ap-northeast-2:
      ARN: arn:aws:iam::600734575887:root
    ap-southeast-1:
      ARN: arn:aws:iam::383597477331:root
    ap-southeast-2:
      ARN: arn:aws:iam::114774131450:root
    ap-south-1:
      ARN: arn:aws:iam::718504428378:root
    me-south-1:
      ARN: arn:aws:iam::076674570225:root
    sa-east-1:
      ARN: arn:aws:iam::507241528517:root
    us-gov-west-1:
      ARN: arn:aws:iam::048591011584:root
    us-gov-east-1:
      ARN: arn:aws:iam::190560391635:root
    cn-north-1:
      ARN: arn:aws:iam::638102146993:root
    cn-northwest-1:
      ARN: arn:aws:iam::037604701340:root
