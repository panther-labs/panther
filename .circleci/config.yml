version: 2.1

# The images that jobs can have
executors:
  panther-buildpack:
    docker:
      - image: pantherlabs/panther-buildpack:1.2.0

jobs:
  setup:
    executor: panther-buildpack
    resource_class: xlarge
    working_directory: ~/panther
    steps:
      - checkout
      - restore_cache:
          name: 'Restore cache: go modules'
          keys:
            - gomod2-{{ checksum "go.mod" }}
      - restore_cache:
          name: 'Restore cache: npm'
          keys:
            - npm-{{ checksum "package-lock.json" }}
      - restore_cache:
          name: 'Restore cache: python env'
          keys:
            - venv-{{ checksum "requirements.txt" }}
      - restore_cache:
          name: 'Restore cache: .setup binaries'
          keys:
            - setup-{{ checksum "tools/mage/setup/setup.go" }}
      - run:
          # "mage setup" will be a no-op unless new dependencies have been introduced.
          name: Install new dependencies
          command: mage setup
      - save_cache:
          name: 'Save cache: go modules'
          key: gomod2-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod
      - save_cache:
          name: 'Save cache: npm'
          key: npm-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - save_cache:
          name: 'Save cache: python env'
          key: venv-{{ checksum "requirements.txt" }}
          paths:
            - .setup/venv
      - save_cache:
          name: 'Save cache: .setup binaries'
          key: setup-{{ checksum "tools/mage/setup/setup.go" }}
          paths:
            - .setup/golangci-lint
            - .setup/swagger
            - .setup/terraform

  generate_and_fmt:
    executor: panther-buildpack
    resource_class: medium
    working_directory: ~/panther
    steps:
      - run:
          name: debugging
          command: |
            pwd
            ls -a .
      - run:
          name: Generate and format source files
          command: mage build:api build:cfn fmt
      - run:
          name: Push changes (if any) to remote ref
          command: |
            git config --global user.email "github-service-account@runpanther.io"
            git config --global user.name "panther-bot"
            git add -A .
            git commit -m "mage build:api build:cfn fmt" || true
            git push origin $CIRCLE_BRANCH

  test_cfn:
    executor: panther-buildpack
    resource_class: medium
    working_directory: ~/panther
    steps:
      - run:
          command: mage test:cfn

  test_go:
    executor: panther-buildpack
    resource_class: xlarge
    working_directory: ~/panther
    steps:
      - run:
          command: mage test:go

  test_python:
    executor: panther-buildpack
    resource_class: medium
    working_directory: ~/panther
    steps:
      - run:
          command: mage test:python

  test_web:
    executor: panther-buildpack
    resource_class: xlarge
    working_directory: ~/panther
    steps:
      - run:
          command: mage test:web

  npm_audit:
    executor: panther-buildpack
    resource_class: small
    steps:
      - checkout
      - run:
          name: Audit NPM packages
          command: npm audit --production # does not require installing packages first

  bundlesize:
    executor: panther-buildpack
    steps:
      - run:
          name: Check bundle size
          command: npm run bundlesize

  # Upload dependency metadata to FOSSA, analyze offline
  fossa_upload:
    executor: panther-buildpack
    resource_class: small
    steps:
      - checkout
      - run: |
          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | bash
      - run:
          command: fossa # generate config file, run dependency analysis, and upload metadata to FOSSA

workflows:
  version: 2
  pipeline:
    jobs:
      - npm_audit
      - setup
      - generate_and_fmt:
          filters:
            branches:
              ignore: master
          requires:
            - setup
      - test_cfn:
          requires:
            - setup
            - generate_and_fmt
      - test_go:
          requires:
            - setup
            - generate_and_fmt
      - test_python:
          requires:
            - setup
            - generate_and_fmt
      - test_web:
          requires:
            - setup
            - generate_and_fmt
      - bundlesize:
          requires:
            - setup
      - fossa_upload:
          filters:
            branches:
              only: master
