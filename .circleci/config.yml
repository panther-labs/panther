version: 2.1

# The images that jobs can have
executors:
  panther-buildpack:
    docker:
      - image: pantherlabs/panther-buildpack:1.2.0

# The pool of jobs that that our CI will be able to run
jobs:
  mage_test_ci:
    executor: panther-buildpack
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          name: 'Restore cache: go modules'
          keys:
            - gomod2-{{ checksum "go.mod" }}
      - run:
          # Start compiling mage in the background while other caches are restoring
          name: Compile mage (background)
          command: mage
          background: true
      - restore_cache:
          name: 'Restore cache: npm'
          keys:
            - npm-{{ checksum "package-lock.json" }}
      - restore_cache:
          name: 'Restore cache: python env'
          keys:
            - venv-{{ checksum "requirements.txt" }}
      - restore_cache:
          name: 'Restore cache: .setup binaries'
          keys:
            - setup-{{ checksum "tools/mage/setup.go" }}

      - run:
          # By this point, mage is compiled and all dependencies have been restored from the cache.
          # "mage setup" will be a no-op unless new dependencies have been introduced.
          name: Install new dependencies
          command: mage setup

      - save_cache:
          name: 'Save cache: go modules'
          key: gomod2-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod
      - save_cache:
          name: 'Save cache: npm'
          key: npm-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - save_cache:
          name: 'Save cache: python env'
          key: venv-{{ checksum "requirements.txt" }}
          paths:
            - .setup/venv
      - save_cache:
          name: 'Save cache: .setup binaries'
          key: setup-{{ checksum "tools/mage/setup.go" }}
          paths:
            - .setup/golangci-lint
            - .setup/swagger
            - .setup/terraform

      - run:
          name: Run test suite
          command: mage test:ci

  npm_audit:
    executor: panther-buildpack
    steps:
      - checkout
      - run:
          name: Audit NPM packages
          command: npm audit --production # does not require installing packages first

workflows:
  version: 2
  pipeline:
    jobs:
      - mage_test_ci
      - npm_audit
