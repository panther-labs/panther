# Panther is a Cloud-Native SIEM for the Modern Security Team.
# Copyright (C) 2020 Panther Labs Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

swagger: '2.0'
info:
  version: '1.0.0' # API version, not the SAR code version
  title: panther-resources-api
  description: Tracks resource state and modification history
  contact:
    name: Panther Labs
    url: https://runpanther.io/about
    email: support@runpanther.io

schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

# The name of the Lambda handler function that will process API requests
x-panther-lambda-handler: panther-resources-api

parameters: # Common parameters shared across multiple methods
  resourceId:
    name: resourceId
    in: query
    description: URL-encoded unique resource identifier
    required: true
    type: string
    minLength: 1
    maxLength: 2000

paths:
  /resource:
    post:
      operationId: AddResources
      summary: Add or replace resources across one or more accounts
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddResources'
      responses:
        201:
          description: OK
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error

    # The frontend retrieves individual resource details.
    #
    # Example: GET /resource ?
    #     resourceId=arn%3Aaws%3As3%3A%3A%3Amy-bucket%0A  // url-encoded
    #
    # Response: {
    #     "attributes": {
    #         "Name":       "MyBucket",
    #         "Region":     "us-west-2",
    #         "Encryption": enabled,
    #         ...
    #     },
    #    "complianceStatus": "PASS",
    #    "deleted":          false,
    #    "id":               "arn:aws:s3:::my-bucket",
    #    "integrationId":    "df6652ff-22d7-4c6a-a9ec-3fe50fadbbbf",
    #    "integrationType":  "aws",
    #    "lastModified":     "2019-08-26T00:00:00.000Z",
    #    "type":             "AWS.S3.Bucket"
    # }
    get:
      operationId: GetResource
      summary: Get resource details
      parameters:
        - $ref: '#/parameters/resourceId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Resource'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resource does not exist
        500:
          description: Internal server error

  /delete:
    post:
      operationId: DeleteResources
      summary: Delete resources across multiple accounts
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteResources'
      responses:
        200:
          description: OK
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error

  /list:
    # The frontend pages through resources for a customer account
    #
    # Example: GET /list ?
    #   complianceStatus=PASS &
    #   deleted=false &
    #   idContains=prod-bucket &
    #   integrationId=df6652ff-22d7-4c6a-a9ec-3fe50fadbbbf &
    #   integrationType=aws &
    #   types=AWS.S3.Bucket,AWS.KMS.Key &
    #   sortBy=id &
    #   sortDir=ascending
    #
    # Response: {
    #     "paging": {
    #         "thisPage":   1,
    #         "totalPages": 1,
    #         "totalItems": 1
    #     },
    #     "resources": [
    #         {
    #             "complianceStatus": "PASS",
    #             "deleted":          false,
    #             "id":               "arn:aws:s3:::prod-bucket",
    #             "integrationId":    "df6652ff-22d7-4c6a-a9ec-3fe50fadbbbf",
    #             "integrationType":  "aws",
    #             "lastModified":     "2019-08-26T00:00:00.000Z",
    #             "type":             "AWS.S3.Bucket"
    #         }
    #     ]
    # }
    get:
      operationId: ListResources
      summary: List resources for a customer account
      parameters:
        # filtering
        - name: complianceStatus
          in: query
          description: Only include resources with a specific compliance status
          type: string
          enum: [ERROR, FAIL, PASS]
        - name: deleted
          in: query
          description: Only include resources which are or are not deleted
          type: boolean
        - name: idContains
          in: query
          description: Only include resources whose ID contains this URL-encoded substring (case-insensitive)
          type: string
        - name: integrationId
          in: query
          description: Only include resources from this source integration
          type: string
          pattern: '[a-f0-9\-]{36}'
        - name: integrationType
          in: query
          description: Only include resources from this integration type
          type: string
          enum: [aws]
        - name: types
          in: query
          description: Only include resources which match one of these types
          type: array
          collectionFormat: csv
          uniqueItems: true
          items:
            type: string

        # projection
        - name: fields
          in: query
          description: Resource fields to select (default - all except attributes)
          type: array
          collectionFormat: csv
          uniqueItems: true
          items:
            type: string

          # We can't specify a default here: https://github.com/go-swagger/go-swagger/issues/2096
        # sorting
        - name: sortBy
          in: query
          description: Name of the field to sort by
          type: string
          enum:
            - complianceStatus
            - id
            - lastModified
            - type
          default: id
        - name: sortDir
          in: query
          description: Sort direction
          type: string
          enum: [ascending, descending]
          default: ascending

        # paging
        - name: pageSize
          in: query
          description: Number of items in each page of results
          type: integer
          minimum: 1
          maximum: 1000
          default: 25
        - name: page
          in: query
          description: Which page of results to retrieve
          type: integer
          minimum: 1
          default: 1
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResourceList'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error

  /org-overview:
    get:
      operationId: GetOrgOverview
      summary: Get an overview of the resources in an organization
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OrgOverview'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error

definitions:
  Error:
    type: object
    properties:
      message:
        description: Error message
        type: string
    required:
      - message

  Resource:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/attributes'
      complianceStatus:
        $ref: '#/definitions/complianceStatus'
      deleted:
        $ref: '#/definitions/deleted'
      id:
        $ref: '#/definitions/resourceId'
      integrationId:
        $ref: '#/definitions/integrationId'
      integrationType:
        $ref: '#/definitions/integrationType'
      lastModified:
        $ref: '#/definitions/lastModified'
      type:
        $ref: '#/definitions/resourceType'
    required: # force these properties to always be saved to Dynamo
      - attributes
      - complianceStatus
      - deleted
      - id
      - integrationId
      - integrationType
      - lastModified
      - type

  ##### AddResources #####
  AddResources:
    type: object
    properties:
      resources:
        type: array
        items:
          $ref: '#/definitions/AddResourceEntry'
        minItems: 1
        maxItems: 500
    required:
      - resources

  AddResourceEntry:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/attributes'
      id:
        $ref: '#/definitions/resourceId'
      integrationId:
        $ref: '#/definitions/integrationId'
      integrationType:
        $ref: '#/definitions/integrationType'
      type:
        $ref: '#/definitions/resourceType'
    required:
      - attributes
      - id
      - integrationId
      - integrationType
      - type

  ##### DeleteResources #####
  DeleteResources:
    type: object
    properties:
      resources:
        type: array
        items:
          $ref: '#/definitions/DeleteEntry'
        minItems: 1
        maxItems: 1000
        uniqueItems: true
    required:
      - resources

  DeleteEntry:
    type: object
    properties:
      id:
        $ref: '#/definitions/resourceId'
    required:
      - id

  ##### ListResources #####
  ResourceList:
    type: object
    properties:
      paging:
        $ref: '#/definitions/Paging'
      resources:
        type: array
        items:
          $ref: '#/definitions/Resource'
    required:
      - paging
      - resources

  Paging:
    type: object
    properties:
      thisPage:
        type: integer
        minimum: 0
      totalPages:
        type: integer
        minimum: 0
      totalItems:
        type: integer
        minimum: 0
    required:
      - thisPage
      - totalPages
      - totalItems

  ##### GetOrgOverview #####
  OrgOverview:
    type: object
    properties:
      resources:
        type: array
        items:
          $ref: '#/definitions/ResourceTypeSummary'
    required:
      - resources

  ResourceTypeSummary:
    type: object
    properties:
      count:
        type: integer
        minimum: 0
      type:
        $ref: '#/definitions/resourceType'
    required:
      - count
      - type

  ##### object properties #####
  attributes:
    description: Resource attributes
    type: object
    minProperties: 1
    maxProperties: 500

  complianceStatus:
    description: Pass/fail compliance status
    type: string
    enum:
      - ERROR
      - FAIL
      - PASS

  deleted:
    description: True if the resource has been deleted
    type: boolean

  integrationId:
    description: Resource is from this source integration
    type: string
    pattern: '[a-f0-9\-]{36}'

  integrationType:
    description: Resource lives in this type of account
    type: string
    enum:
      - aws

  lastModified:
    description: When the resource state was last updated in the Panther database
    type: string
    format: date-time

  resourceId:
    description: Unique resource identifier
    type: string
    minLength: 1
    maxLength: 5000

  resourceType:
    description: Resource type
    type: string
    minLength: 1
    maxLength: 100
