package models

/**
 * Panther is a Cloud-Native SIEM for the Modern Security Team.
 * Copyright (C) 2020 Panther Labs Inc
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

import (
	"time"

	"github.com/aws/aws-lambda-go/events"

	alertModels "github.com/panther-labs/panther/api/lambda/alerts/models"
)

const (
	// RuleType identifies the Alert to be for a Policy
	RuleType = "RULE"

	// PolicyType identifies the Alert to be for a Policy
	PolicyType = "POLICY"
)

// LambdaInput is the invocation event expected by the Lambda function.
//
// Exactly one action must be specified, see comments below for examples.
type LambdaInput struct {
	DispatchAlerts []*DispatchAlertsInput `json:"Records"` // SQS Shape
	DeliverAlert   *DeliverAlertInput     `json:"deliverAlert"`
}

// DeliverAlertInput sends an alert to the specified destinations
//
// Example:
// {
//     "deliverAlert": {
//         "alertId": "8304cc90750d4b8f9a63b90a4543c707"
//         "outputIds": ["198bdbc5-5d94-4d59-8c93-f2bab86359f5"]
//     }
// }
type DeliverAlertInput struct {
	AlertID   string   `json:"alertId" validate:"required,hexadecimal,len=32"` // AlertID is an MD5 hash
	OutputIds []string `json:"outputIds" validate:"required,gt=0,dive,uuid4"`
}

// DispatchAlertsInput is an alias for an SQSMessage
type DispatchAlertsInput = events.SQSMessage

// DeliverAlertOutput is an alias for an alert summary
type DeliverAlertOutput = alertModels.AlertSummary

// Alert is the schema for each row in the Dynamo alerts table.
type Alert struct {
	// ID is the rule that triggered the alert.
	AnalysisID string `json:"analysisId" validate:"required"`

	// Type specifies if an alert is for a policy or a rule
	Type string `json:"type" validate:"oneof=RULE POLICY"`

	// CreatedAt is the creation timestamp (seconds since epoch).
	CreatedAt time.Time `json:"createdAt" validate:"required"`

	// Severity is the alert severity at the time of creation.
	Severity string `json:"severity" validate:"oneof=INFO LOW MEDIUM HIGH CRITICAL"`

	// OutputIds is the set of outputs for this alert.
	OutputIds []string `json:"outputIds,omitempty"`

	// AnalysisDescription is the description of the rule that triggered the alert.
	AnalysisDescription *string `json:"analysisDescription,omitempty"`

	// Name is the name of the policy at the time the alert was triggered.
	AnalysisName *string `json:"analysisName,omitempty"`

	// Version is the S3 object version for the policy.
	Version *string `json:"version,omitempty"`

	// Runbook is the user-provided triage information.
	Runbook *string `json:"runbook,omitempty"`

	// Tags is the set of policy tags.
	Tags []string `json:"tags,omitempty"`

	// AlertID specifies the alertId that this Alert is associated with.
	AlertID *string `json:"alertId,omitempty"`

	// Title is the optional title for the alert generated by Python Rules engine
	Title *string `json:"title,omitempty"`

	// RetryCount is a counter for the nubmer of times we have attempted to send this alert to a destination.
	RetryCount int `json:"retryCount,omitempty"`
}
