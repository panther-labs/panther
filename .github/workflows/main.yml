# Panther is a Cloud-Native SIEM for the Modern Security Team.
# Copyright (C) 2020 Panther Labs Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  sync_prs_from_community_to_enterprise:
    name: Syncs merged PRs from Panther Community to Panther Enterprise
    runs-on: ubuntu-latest
    env:
      SOURCE_REPO_CHECKOUT_PATH: src
      DEST_REPO_CHECKOUT_PATH: dest
      DEST_REPO: 3nvi/panther-enterprise
      HEAD: ${{ format('sync-{0}', github.event.pull_request.head.ref) }}
      IGNORE_LABEL: enterprise-backport
    steps:
      - name: Checkout Source Repo
        uses: actions/checkout@v2
        with:
          path: $SOURCE_REPO_CHECKOUT_PATH
          token: ${{ secrets.PR_SYNC_TOKEN }}
          fetch-depth: 1

      - name: Checkout Dest Repo
        uses: actions/checkout@v2
        with:
          path: $DEST_REPO_CHECKOUT_PATH
          token: ${{ secrets.PR_SYNC_TOKEN }}
          fetch-depth: 1
          repository: 3nvi/panther-enterprise

        # Return early if the PR was not merged
      - name: Validate that PR was merged and not closed
        if: ${{ github.event.pull_request.merged == false }}
        run: exit 1

        # Return early if the PR has the ignore label
      - name: Validate that PR shouldn't be excempt from syncing
        if: ${{ contains(github.event.pull_request.labels, $IGNORE_LABEL) }}
        run: exit 1

        # Cherry picks commit from `source` and creates a PR-ready branch in `dest`
      - name: Bootstrap a PR branch
        if: ${{ success() }}
        working-directory: $DEST_REPO_CHECKOUT_PATH
        run: |
          git config --global user.email "ci@runpanther.io"
          git config --global user.name "CI"
          git checkout -b $HEAD
          git remote add source https://github.com/$GITHUB_REPOSITORY.git
          git fetch --all
          git cherry-pick ${{ github.event.pull_request.head.sha }} || true
          git add -A .
          git commit -m "merge changes from $GITHUB_REPOSITORY"
          git push origin $HEAD

      - name: Monitor PRs on a Source Repo & Create PRs on a dest one
        if: ${{ success() }}
        uses: ./$SOURCE_REPO_CHECKOUT_PATH/build/actions/pr_sync
        id: pr_sync
        env:
          ACTIONS_STEP_DEBUG: ${{ secrets.ACTIONS_STEP_DEBUG }}
        with:
          repo: $DEST_REPO
          head: $HEAD
          token: ${{ secrets.PR_SYNC_TOKEN }}
